{"ast":null,"code":"import HeaderTow from \"../layouts/header/HeaderTow.vue\";\nexport default {\n  name: 'app',\n  components: {\n    HeaderTow\n  },\n  data() {\n    return {\n      title: '',\n      userGroup: '',\n      dynamicWidth: '100%',\n      dynamicMargin: '',\n      isnavbar: false,\n      navbarType: \"\",\n      springBootVueInfo: {\n        groupId: \"\",\n        artifactId: \"\",\n        description: \"\"\n      }\n    };\n  },\n  created() {\n    this.aaaa = document.getElementById(\"pageBody\");\n    console.log(this.aaaa);\n    this.userValidation();\n  },\n  mounted() {\n    // this.searchItems();\n  },\n  methods: {\n    updateUserDateStore: function () {\n      // this.userGroup = this.$store.getters.userGroup; // todo :나중에 유저권한 가져올떄 필요함\n\n      this.navbarType = 'HeaderTow';\n      // let element = document.querySelector(\".container\");\n      // element.style.maxWidth = \"80%\";\n      // let body = document.body;\n      // body.style.overflow = \"\";\n      this.dynamicMargin = \"0 auto\";\n      this.dynamicWidth = \"100%\";\n\n      // this.$store.commit('initSession', payload);\n      // this.$store.commit('LOGIN', payload.userInfo.userId);\n    },\n    userValidation: function () {\n      this.updateUserDateStore();\n    }\n  }\n};","map":{"version":3,"names":["HeaderTow","name","components","data","title","userGroup","dynamicWidth","dynamicMargin","isnavbar","navbarType","springBootVueInfo","groupId","artifactId","description","created","aaaa","document","getElementById","console","log","userValidation","mounted","methods","updateUserDateStore"],"sources":["/Users/gimdongha/Desktop/cloudcomputing/i-curriculum_FE/src/layouts/DefaultLayout.vue"],"sourcesContent":["<template>\n  <div class=\"page\" >\n    <HeaderTow title=\"\" msg=\"\" v-if=\"navbarType == 'HeaderTow'\" /> <!--유저 권한일떄 보이는 페이지-->\n    <div class=\"page-wrapper\" :style=\"{ width: '100%', margin: dynamicMargin}\">\n      <router-view />\n    </div>\n  </div>\n</template>\n\n<script lang=\"js\">\nimport HeaderTow from \"../layouts/header/HeaderTow.vue\"\n\n\nexport default {\n  name: 'app',\n  components: {\n    \n    HeaderTow,\n    \n  },\n  data() {\n    return {\n      title: '',\n      userGroup: '',\n      dynamicWidth: '100%',\n      dynamicMargin: '',\n      isnavbar: false,\n      navbarType: \"\",\n      springBootVueInfo: {\n        groupId: \"\",\n        artifactId: \"\",\n        description: \"\"\n      }\n    }\n  },\n  created(){\n    this.aaaa =  document.getElementById(\"pageBody\");\n    console.log(this.aaaa)\n    this.userValidation(); \n  },\n  mounted() {\n    // this.searchItems();\n    \n    \n  },\n  methods: {\n    updateUserDateStore: function () {\n      \n      // this.userGroup = this.$store.getters.userGroup; // todo :나중에 유저권한 가져올떄 필요함\n      \n        this.navbarType = 'HeaderTow'\n        // let element = document.querySelector(\".container\");\n        // element.style.maxWidth = \"80%\";\n        // let body = document.body;\n        // body.style.overflow = \"\";\n        this.dynamicMargin= \"0 auto\"\n        this.dynamicWidth = \"100%\"\n\n      \n      \n      // this.$store.commit('initSession', payload);\n      // this.$store.commit('LOGIN', payload.userInfo.userId);\n    },\n    userValidation: function () {\n      this.updateUserDateStore(); \n    },\n  },\n\n}\n</script>\n"],"mappings":"AAUA,OAAOA,SAAQ,MAAO,iCAAgC;AAGtD,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IAEVF;EAEF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,SAAS,EAAE,EAAE;MACbC,YAAY,EAAE,MAAM;MACpBC,aAAa,EAAE,EAAE;MACjBC,QAAQ,EAAE,KAAK;MACfC,UAAU,EAAE,EAAE;MACdC,iBAAiB,EAAE;QACjBC,OAAO,EAAE,EAAE;QACXC,UAAU,EAAE,EAAE;QACdC,WAAW,EAAE;MACf;IACF;EACF,CAAC;EACDC,OAAOA,CAAA,EAAE;IACP,IAAI,CAACC,IAAG,GAAKC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;IAChDC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,IAAI;IACrB,IAAI,CAACK,cAAc,CAAC,CAAC;EACvB,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;EAAA,CAGD;EACDC,OAAO,EAAE;IACPC,mBAAmB,EAAE,SAAAA,CAAA,EAAY;MAE/B;;MAEE,IAAI,CAACd,UAAS,GAAI,WAAU;MAC5B;MACA;MACA;MACA;MACA,IAAI,CAACF,aAAa,GAAE,QAAO;MAC3B,IAAI,CAACD,YAAW,GAAI,MAAK;;MAI3B;MACA;IACF,CAAC;IACDc,cAAc,EAAE,SAAAA,CAAA,EAAY;MAC1B,IAAI,CAACG,mBAAmB,CAAC,CAAC;IAC5B;EACF;AAEF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}