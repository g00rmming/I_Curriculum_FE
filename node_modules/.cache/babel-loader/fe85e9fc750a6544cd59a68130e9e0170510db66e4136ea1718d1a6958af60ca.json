{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from '@/router';\nexport default {\n  inject: ['$axios'],\n  data() {\n    return {\n      apiurl: '/v1/members',\n      memberInfo: {\n        //이메일 비밀번호 닉네임 입학년도 완료학기 소속과이름\n        clientId: '',\n        password: '',\n        nickname: '',\n        department_name: '',\n        joinYear: 0,\n        compeleteTerm: 0,\n        checkClick: false,\n        checkDuplicate: false,\n        deptNameList: []\n      },\n      passwordFieldType: 'password'\n    };\n  },\n  mounted() {\n    this.fetchData();\n  },\n  methods: {\n    async fetchData() {\n      const department = await this.$axios.get('v1/departments-names');\n      this.memberInfo.deptNameList = department.data.result.departmentNameList;\n      console.log('yeon', this.memberInfo.deptNameList);\n    },\n    showPassword() {\n      console.log(\"누르기전 = \", this.passwordFieldType);\n      this.passwordFieldType = this.passwordFieldType === 'password' ? 'text' : 'password';\n      console.log(\"누른후 = \", this.passwordFieldType);\n    },\n    createMember() {\n      this.$swal({\n        title: \"회원가입 하시겠습니까?\",\n        type: \"warning\",\n        icon: \"question\",\n        showCancelButton: true,\n        confirmButtonClass: \"btn-danger\",\n        confirmButtonText: \"예\",\n        cancelButtonText: \"아니오\",\n        closeOnConfirm: true,\n        closeOnCancel: true\n      }).then(result => {\n        if (result.isConfirmed) {\n          if (this.checkClick && !this.checkDuplicate) {\n            if (this.memberInfo.clientId == '' || this.memberInfo.password == '' || this.memberInfo.nickname == '' || this.memberInfo.department_name == '' || this.memberInfo.joinYear == '' || this.compeleteTerm == '') {\n              this.$swal('빈칸 없이 모든 항목을 입력/선택 해주세요.', '', 'warning'); //입력란에 빈칸 있을 시 다시 입력 받게 함\n            } else {\n              this.$axios.post(`${this.apiurl}/join`, {\n                clientId: this.memberInfo.clientId,\n                password: this.memberInfo.password,\n                nickname: this.memberInfo.nickname,\n                department_name: this.memberInfo.department_name,\n                joinYear: this.memberInfo.joinYear,\n                compeleteTerm: this.compeleteTerm\n              }).then(res => {\n                console.log(res);\n                if (res) {\n                  this.$swal('완료 되었습니다.', '', 'success');\n                  router.push('/signin');\n                } else {\n                  alert('실패');\n                }\n              }).catch(err => {\n                console.log(err);\n              });\n            }\n          } else {\n            if (!this.checkClick) {\n              this.$swal('중복 체크를 해주세요.', '', 'warning'); // 중복체크 안했을 시 join 요청 하지 않음.\n            }\n          }\n        } else {\n          this.$swal('회원가입을 취소 하셨습니다.', '', 'warning');\n        }\n      });\n    },\n    async isExisted() {\n      // 아이디 중복 체크 메서드. 중복체크 클릭 버튼과 중복인지 아닌지를 bool 값으로 지정.\n      if (this.memberInfo.clientId == '') {\n        this.$swal('아이디를 입력해 주세요.', '', 'warning');\n      } else if (this.memberInfo.clientId.length < 4) {\n        this.$swal('4 ~ 20 자리 사이 아이디를 입력해 주세요.', '', 'warning');\n      } else {\n        this.checkClick = true;\n        const res = await this.$axios.get('/v1/members/isExistId', {\n          params: {\n            clientId: this.memberInfo.clientId\n          }\n        });\n        this.checkDuplicate = res.data.result;\n        if (this.checkDuplicate) {\n          this.$swal('이미 존재하는 아이디( ID or Email) 입니다.', '', 'warning');\n          this.checkClick = false;\n        } else {\n          this.$swal('사용 가능한 아이디( ID or Email ) 입니다.', '', 'success');\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["router","inject","data","apiurl","memberInfo","clientId","password","nickname","department_name","joinYear","compeleteTerm","checkClick","checkDuplicate","deptNameList","passwordFieldType","mounted","fetchData","methods","department","$axios","get","result","departmentNameList","console","log","showPassword","createMember","$swal","title","type","icon","showCancelButton","confirmButtonClass","confirmButtonText","cancelButtonText","closeOnConfirm","closeOnCancel","then","isConfirmed","post","res","push","alert","catch","err","isExisted","length","params"],"sources":["/Users/gimdongha/Desktop/cloudcomputing/i-curriculum_FE/src/views/user/createMember.vue"],"sourcesContent":["<template>\n  <div class=\"page page-center\">\n    <div class=\"container-tight py-4\">\n      <div class=\"text-center mt-4 mb-4\">\n        <h2>\n          <!-- 화이트 로고 -->\n          <img src=\"@/assets/image.png\" width=\"200px\" />\n          <!-- 블루 로고 -->\n        </h2>\n      </div>\n      <div class=\"card card-md\">\n        <div class=\"card-body\">\n          <form action=\"./\" method=\"get\" autocomplete=\"off\" novalidate>\n            <div class=\"mb-3\">\n              <label class=\"form-label\">아이디(ID)</label>\n              <div class=\"input-group\">\n                <input v-model=\"memberInfo.clientId\" type=\"email\" class=\"form-control\" placeholder=\"your ID\" autocomplete=\"off\" />\n                <a @click=\"isExisted\" class=\"btn btn-primary\" role=\"button\">중복체크</a>\n              </div>\n            </div>\n            <div class=\"mb-3\">\n              <label class=\"form-label\">닉네임</label>\n              <input v-model=\"memberInfo.nickname\" type=\"text\" class=\"form-control\" placeholder=\"nickname\" autocomplete=\"off\" />\n            </div>\n            <div class=\"mb-2\">\n              <label @onclick=\"showPassword\" class=\"form-label\">비밀번호(Password)</label>\n              <div class=\"input-group input-group-flat\">\n                <input v-model=\"memberInfo.password\" :type=\"passwordFieldType\" class=\"form-control\" placeholder=\"Your password\" autocomplete=\"off\" />\n                <span class=\"input-group-text\">\n                  <a href=\"#\" class=\"link-secondary\" title=\"Show password\" data-bs-toggle=\"tooltip\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                      <path d=\"M12 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0\" />\n                      <path d=\"M22 12c-2.667 4.667 -6 7 -10 7s-7.333 -2.333 -10 -7c2.667 -4.667 6 -7 10 -7s7.333 2.333 10 7\" />\n                    </svg>\n                  </a>\n                </span>\n              </div>\n            </div>\n            <br>\n            <div class=\"mb-3\">\n              <label class=\"form-label\">학과</label>\n              <select v-model=\"memberInfo.department_name\" class=\"form-select\">\n                <option v-for=\"term in memberInfo.deptNameList\" :key=\"term\" :value=\"term\">{{ term }}</option>\n              </select>\n            </div>\n            <div class=\"mb-3\">\n              <label class=\"form-label\">입학년도</label>\n              <select v-model=\"memberInfo.joinYear\" class=\"form-select\">\n                <option value=\"2018\">2018</option>\n                <option value=\"2019\">2019</option>\n                <option value=\"2020\">2020</option>\n                <option value=\"2021\">2021</option>\n                <option value=\"2022\">2022</option>\n                <option value=\"2023\">2023</option>\n                <option value=\"2024\">2024</option>\n              </select>\n            </div>\n            <div class=\"mb-3\">\n              <label class=\"form-label\">현재 학기</label>\n              <select v-model=\"memberInfo.compeleteTerm\" class=\"form-select\">\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n                <option value=\"6\">6</option>\n                <option value=\"7\">7</option>\n                <option value=\"8\">8</option>\n              </select>\n            </div>\n            <div class=\"form-footer mb-2 text-center\">\n              <a @click=\"createMember\" class=\"btn btn-pill btn-primary\" role=\"button\">회원가입</a>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport router from '@/router'\n\n\n\n\n\nexport default {\n  inject: ['$axios'],\n  data() {\n    return {\n      apiurl: '/v1/members',\n      memberInfo: { //이메일 비밀번호 닉네임 입학년도 완료학기 소속과이름\n        clientId: '',\n        password: '',\n        nickname: '',\n        department_name: '',\n        joinYear: 0,\n        compeleteTerm: 0,\n        checkClick: false,\n        checkDuplicate: false,\n        deptNameList: [],\n      },\n      passwordFieldType: 'password'\n    };\n\n  },\n  mounted(){\n    this.fetchData();\n  },\n  methods: {\n     async fetchData(){\n      const department =  await this.$axios.get('v1/departments-names');\n      this.memberInfo.deptNameList = department.data.result.departmentNameList;\n      console.log('yeon', this.memberInfo.deptNameList)\n    },\n    showPassword() {\n      console.log(\"누르기전 = \", this.passwordFieldType);\n      this.passwordFieldType = this.passwordFieldType === 'password' ? 'text' : 'password';\n      console.log(\"누른후 = \", this.passwordFieldType);\n    },\n    createMember() {\n      this.$swal({\n        title: \"회원가입 하시겠습니까?\",\n        type: \"warning\",\n        icon: \"question\",\n        showCancelButton: true,\n        confirmButtonClass: \"btn-danger\",\n        confirmButtonText: \"예\",\n        cancelButtonText: \"아니오\",\n        closeOnConfirm: true,\n        closeOnCancel: true\n      }).then((result) => {\n        if (result.isConfirmed) {\n          if(this.checkClick && !this.checkDuplicate){\n            if(this.memberInfo.clientId == '' ||this.memberInfo.password== '' ||this.memberInfo.nickname =='' || this.memberInfo.department_name == '' || this.memberInfo.joinYear == '' || this.compeleteTerm == ''){\n              this.$swal('빈칸 없이 모든 항목을 입력/선택 해주세요.', '', 'warning'); //입력란에 빈칸 있을 시 다시 입력 받게 함\n            }else{\n               this.$axios.post(`${this.apiurl}/join`, {\n            clientId: this.memberInfo.clientId,\n            password: this.memberInfo.password,\n            nickname: this.memberInfo.nickname,\n            department_name: this.memberInfo.department_name,\n            joinYear: this.memberInfo.joinYear,\n            compeleteTerm: this.compeleteTerm,\n          }).then((res) => {\n            console.log(res);\n            if (res) {\n              this.$swal('완료 되었습니다.', '', 'success')\n              router.push('/signin')\n            } else {\n              alert('실패')\n            }\n          }).catch((err) => {\n            console.log(err);\n          })\n            }\n            \n          }else\n          {\n            if(!this.checkClick){\n              this.$swal('중복 체크를 해주세요.', '', 'warning') // 중복체크 안했을 시 join 요청 하지 않음.\n            }\n           \n          }\n          \n        }else{\n          this.$swal('회원가입을 취소 하셨습니다.', '', 'warning') \n        }\n      })\n    },\n     async isExisted() {\n      // 아이디 중복 체크 메서드. 중복체크 클릭 버튼과 중복인지 아닌지를 bool 값으로 지정.\n      if(this.memberInfo.clientId == ''){\n        this.$swal('아이디를 입력해 주세요.', '', 'warning')\n      }else if(this.memberInfo.clientId.length < 4){\n        this.$swal('4 ~ 20 자리 사이 아이디를 입력해 주세요.', '', 'warning')\n      }else{\n        this.checkClick = true\n          const res=  await this.$axios.get('/v1/members/isExistId', {\n          params: { clientId : this.memberInfo.clientId }\n        });\n        this.checkDuplicate = res.data.result;\n      \n        if(this.checkDuplicate){\n          this.$swal('이미 존재하는 아이디( ID or Email) 입니다.', '', 'warning')\n          this.checkClick =false;\n        }else{\n          this.$swal('사용 가능한 아이디( ID or Email ) 입니다.', '', 'success')\n        }\n      }\n    },\n  }\n}\n</script>\n<style scoped>\n.input-group {\n  display: flex;\n}\n\n.input-group .btn-primary {\n  margin-left: 10px;\n  white-space: nowrap;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}