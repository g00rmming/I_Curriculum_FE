{"ast":null,"code":"// src/store/index.js\nimport { createStore } from 'vuex';\nimport { axios } from 'axios';\nconst store = createStore({\n  state: {\n    isAuthenticated: false,\n    token: null,\n    memberId: null,\n    userName: null,\n    //사용자 이름\n    password: null,\n    // 비밀번호\n    nickname: null,\n    // 사용자 별칭\n    departmentName: null,\n    //학과 이름\n    compeleteTerm: null // 사용자 학기\n  },\n  mutations: {\n    setAuthentication(state, payload) {\n      state.isAuthenticated = payload.isAuthenticated;\n      state.token = payload.token;\n    },\n    setuserName(state, userName) {\n      state.userName = userName;\n    },\n    setmemberId(state, memberId) {\n      //memberid를 설정해주는 \n      state.memberId = memberId;\n    },\n    setpassword(state, password) {\n      state.password = password;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n      state.token = null;\n      state.memberId = null;\n      state.password = null;\n    }\n  },\n  actions: {\n    login({\n      commit\n    }, {\n      token,\n      memberId,\n      password\n    }) {\n      commit('setAuthentication', {\n        isAuthenticated: true,\n        token\n      });\n      commit('setmemberId', memberId);\n      commit('setpassword', password);\n      localStorage.setItem(\"authorization\", token);\n      localStorage.setItem(\"memberId\", memberId);\n      localStorage.setItem(\"isAuthenticated\", true);\n    },\n    logout({\n      commit\n    }) {\n      commit('logout');\n      localStorage.removeItem(\"memberId\");\n      localStorage.removeItem(\"authorization\");\n      localStorage.removeItem(\"isAuthenticated\");\n    },\n    refreshToken({\n      commit\n    }) {\n      //토큰 재발급\n      return new Promise((resolve, reject) => {\n        try {\n          axios.post('/reissue').then(rs => {\n            if (rs) {\n              commit('needLogin', false);\n              resolve(true);\n            } else {\n              console.error(rs.data.msg);\n              commit('needLogin', true);\n              resolve(false);\n            }\n          });\n        } catch (err) {\n          console.error(err);\n          reject(err);\n        }\n      });\n    }\n  },\n  getters: {\n    isAuthenticated: state => state.isAuthenticated,\n    token: state => state.token,\n    userName: state => state.userName,\n    memberId: state => state.memberId,\n    password: state => state.password\n  }\n});\nexport default store;","map":{"version":3,"names":["createStore","axios","store","state","isAuthenticated","token","memberId","userName","password","nickname","departmentName","compeleteTerm","mutations","setAuthentication","payload","setuserName","setmemberId","setpassword","logout","actions","login","commit","localStorage","setItem","removeItem","refreshToken","Promise","resolve","reject","post","then","rs","console","error","data","msg","err","getters"],"sources":["/Users/gimdongha/Desktop/cloudcomputing/i-curriculum_FE/src/store/index.js"],"sourcesContent":["// src/store/index.js\nimport { createStore } from 'vuex';\nimport {axios} from 'axios'\n\nconst store = createStore({\n  state: {\n    isAuthenticated: false,\n    token: null,\n    memberId: null,\n    userName: null, //사용자 이름\n    password: null, // 비밀번호\n    nickname: null, // 사용자 별칭\n    departmentName: null, //학과 이름\n    compeleteTerm: null, // 사용자 학기\n  },\n  mutations: {\n    setAuthentication(state, payload) {\n      state.isAuthenticated = payload.isAuthenticated;\n      state.token = payload.token;\n    },\n    setuserName(state, userName) {\n      state.userName = userName;\n    },\n    setmemberId(state, memberId) { //memberid를 설정해주는 \n      state.memberId = memberId\n    },\n    setpassword(state, password) {\n      state.password = password;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n      state.token = null;\n      state.memberId = null;\n      state.password = null;\n    }\n  },\n  actions: {\n    login({ commit }, { token, memberId, password }) {\n      commit('setAuthentication', { isAuthenticated: true, token });\n      commit('setmemberId', memberId);\n      commit('setpassword', password);\n      localStorage.setItem(\"authorization\", token);\n      localStorage.setItem(\"memberId\", memberId);\n      localStorage.setItem(\"isAuthenticated\", true);\n    },\n    logout({ commit }) {\n      commit('logout');\n      localStorage.removeItem(\"memberId\")\n      localStorage.removeItem(\"authorization\");\n      localStorage.removeItem(\"isAuthenticated\");\n    },\n    refreshToken({ commit }) { //토큰 재발급\n      return new Promise((resolve, reject) => {\n        try {\n          axios.post('/reissue').then((rs)=>{\n            if (rs) {\n              commit('needLogin', false);\n              resolve(true);\n            } else {\n              console.error(rs.data.msg);\n              commit('needLogin', true);\n              resolve(false);\n            }\n          })\n        \n        } catch (err) {\n          console.error(err);\n          reject(err);\n        }\n      })\n    }\n  },\n  getters: {\n    isAuthenticated: state => state.isAuthenticated,\n    token: state => state.token,\n    userName: state => state.userName,\n    memberId: state => state.memberId,\n    password: state => state.password\n  }\n});\n\nexport default store;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}