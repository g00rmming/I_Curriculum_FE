{"ast":null,"code":"import ResourceAllocation from '@/components/dashboard/ResourceAllocation.vue';\nexport default {\n  inject: ['$axios'],\n  components: {\n    ResourceAllocation\n  },\n  props: {},\n  data() {\n    return {\n      onLoading: true,\n      value1: \"\",\n      value2: \"\",\n      memberData: {},\n      majorList: {},\n      // 전공\n      generalList: {},\n      // 교양 \n      generalCoreList: {},\n      // 핵교\n      buttonVisible: true,\n      takeList: [],\n      promptResponse: \"\",\n      prompt: \"\",\n      takeString: \"\",\n      unTakeString: \"\",\n      unTakeList: [],\n      userInput: \"\"\n    };\n  },\n  mounted() {\n    this.fetchData();\n  },\n  methods: {\n    // todo : 데이터 불러오기 가능\n    fetchData() {\n      this.onLoading = true;\n      const userId = localStorage.getItem('memberId');\n      this.$axios.get('/v1/dashboard', {\n        params: {\n          memberId: userId\n        }\n      }).then(res => {\n        console.log(res.data.result);\n        const result = res.data.result;\n        this.memberData = {\n          totalTakenCredit: result.totalTakenCredit || 0,\n          // 전체 이수학점\n          majorTakenCredit: result.majorTakenCredit || 0,\n          // 전공 이수학점\n\n          majorGrade: result.majorGrade ? parseFloat(result.majorGrade).toFixed(2) : 0.00,\n          // 전공 학점\n          previousMajorGrade: result.previousMajorGrade ? parseFloat(result.previousMajorGrade).toFixed(2) : 0.00,\n          // 전학기까지 전공 학점성적 \n\n          totalGrade: result.totalGrade ? parseFloat(result.totalGrade).toFixed(2) : 0.00,\n          // 총 학점 \n          previousTotalGrade: result.previousTotalGrade ? parseFloat(result.previousTotalGrade).toFixed(2) : 0.00,\n          // 전학기총 학점 성적\n\n          generalCoreTakenCredit: result.generalCoreDTO.totalCredit || 0,\n          // 핵심교양 이수학점\n          generalEssentialTakenCredit: result.takenGeneralDTO.takenEssentialCredit || 0,\n          // 교양 필수 학점\n          majorEssentialTakenCredit: result.takenMajorDTO.takenEssentialCredit || 0,\n          //전공 필수 학점\n\n          one: result.generalCoreDTO.takeOne,\n          two: result.generalCoreDTO.takeTwo,\n          three: result.generalCoreDTO.takeThree,\n          four: result.generalCoreDTO.takeFour,\n          five: result.generalCoreDTO.takeFive,\n          six: result.generalCoreDTO.takeSix,\n          creative: result.generalCoreDTO.takeCreative,\n          standardCredit: result.generalCoreDTO.standardCredit,\n          totalGradeIncrese: this.calculatePercentageIncrease(result.previousTotalGrade, result.totalGrade),\n          MajorGradeIncrese: this.calculatePercentageIncrease(result.previousMajorGrade, result.majorGrade)\n        };\n        console.log(\"seok\", this.memberData.MajorGradeIncrese);\n        //추천 전공\n        this.majorList = {\n          major: \"전공\",\n          DataList: result.takenMajorDTO.untakenTop5CourseDTOList.map(course => ({\n            hak: course.courseCode,\n            name: course.courseName,\n            grade: course.credit\n          }))\n        };\n        // 추천 교양 \n        this.generalList = {\n          major: \"교양\",\n          DataList: result.takenGeneralDTO.untakenTop5CourseDTOList.map(course => ({\n            hak: course.courseCode,\n            name: course.courseName,\n            grade: course.credit\n          }))\n        };\n\n        //추천 핵심 교양\n        this.generalCoreList = {\n          major: \"핵교\",\n          DataList: result.generalCoreDTO.untakenTop5CourseDTOList.map(course => ({\n            hak: course.courseCode,\n            name: course.courseName,\n            grade: course.credit\n          }))\n        };\n        this.onLoading = false;\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    calculatePercentageIncrease(initialValue, finalValue) {\n      // 증가율 계산\n      const increase = finalValue - initialValue;\n      const percentageIncrease = increase / initialValue * 100;\n\n      // 결과 반환\n      return percentageIncrease.toFixed(2);\n    },\n    fetchData2() {\n      const userId = localStorage.getItem('memberId');\n      this.$axios.get('/v1/courses/take', {\n        params: {\n          memberId: userId // 실제 사용자 ID로 변경\n        }\n      }).then(response => {\n        const responseList = response.data.result.takenCourseDTOList; // 서버에서 받은 데이터에 맞게 변경\n        console.log('받은 데이터:', responseList); // 받아온 데이터 로그\n        if (Array.isArray(responseList)) {\n          this.takeList = responseList;\n        } else {\n          console.error('받은 데이터가 배열이 아닙니다:', responseList);\n        }\n      }).catch(error => {\n        console.error('데이터 가져오기 실패:', error);\n        this.$swal(\"로그인을 해주세요.\", '', \"error\");\n      });\n      this.$axios.get('/v1/courses/untake', {\n        params: {\n          memberId: userId // TODO : 실제 사용자 ID로 변경\n        }\n      }).then(response => {\n        const responseList = response.data.result.untakenCourseDTOList;\n        this.unTakeList = responseList.map(item => ({\n          name: item.courseName //과목명\n        }));\n        console.log(\"here\", this.unTakeList);\n      }).catch(error => {\n        console.error('오류 발생1:', error); // 오류 로그 추가\n        this.$swal(\"로그인을 해주세요.\", '', \"error\");\n      }).finally(() => {\n        this.generateTakeString();\n        this.generateUnTakeString();\n        console.log(\"dong\", this.unTakeList);\n        this.prompt = \"내가\" + this.userInput + \"이/가 되고싶은데 현재 수강한 과목들은 \" + this.takeString + \"이고 \" + \"미수강 과목들은 \" + this.unTakeList + \"인데 미수강 과목들에서 어떤 과목을 들으면 좋을까? 5개만 추천해줘.\";\n        console.log(\"dong1\", this.prompt);\n        this.askToAi();\n        this.onLoading = false;\n      });\n    },\n    generateTakeString() {\n      this.takeString = this.takeList.filter(subject => subject.categoryName === \"전공필수\" || subject.categoryName === \"전공선택\").map(subject => subject.courseName).join(', ');\n    },\n    generateUnTakeString() {\n      this.unTakeString = this.unTakeList.filter(unTakeItem).map(unTakeItem => unTakeItem.name).join(', ');\n    },\n    askToAi() {\n      // 생성한 프롬프트 데이터를 payload로 준비\n      const payload = {\n        prompt: this.prompt\n      };\n      // API 요청 보내기\n      this.$axios.post('/api', payload).then(response => {\n        // 응답 데이터를 처리하고, output 값을 promptResponse에 저장\n        this.promptResponse = response.data.output;\n        console.log('응답 받음:', this.promptResponse);\n        this.loading = false;\n      }).catch(error => {\n        // 오류 처리\n        console.error('오류 발생:', error);\n        this.loading = false;\n      });\n    },\n    handleClick() {\n      this.loading = true;\n      this.fetchData2();\n      this.buttonVisible = false; // 버튼을 클릭하면 사라지게 설정\n    }\n  },\n  watch: {}\n};","map":{"version":3,"names":["ResourceAllocation","inject","components","props","data","onLoading","value1","value2","memberData","majorList","generalList","generalCoreList","buttonVisible","takeList","promptResponse","prompt","takeString","unTakeString","unTakeList","userInput","mounted","fetchData","methods","userId","localStorage","getItem","$axios","get","params","memberId","then","res","console","log","result","totalTakenCredit","majorTakenCredit","majorGrade","parseFloat","toFixed","previousMajorGrade","totalGrade","previousTotalGrade","generalCoreTakenCredit","generalCoreDTO","totalCredit","generalEssentialTakenCredit","takenGeneralDTO","takenEssentialCredit","majorEssentialTakenCredit","takenMajorDTO","one","takeOne","two","takeTwo","three","takeThree","four","takeFour","five","takeFive","six","takeSix","creative","takeCreative","standardCredit","totalGradeIncrese","calculatePercentageIncrease","MajorGradeIncrese","major","DataList","untakenTop5CourseDTOList","map","course","hak","courseCode","name","courseName","grade","credit","catch","err","initialValue","finalValue","increase","percentageIncrease","fetchData2","response","responseList","takenCourseDTOList","Array","isArray","error","$swal","untakenCourseDTOList","item","finally","generateTakeString","generateUnTakeString","askToAi","filter","subject","categoryName","join","unTakeItem","payload","post","output","loading","handleClick","watch"],"sources":["/Users/gimdongha/Desktop/cloudcomputing/i-curriculum_FE/src/views/mypage/DashBoard.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div v-if=\"onLoading\">\n      <div class=\"container container-slim py-4\">\n        <div class=\"text-center\">\n          <div class=\"text-muted mb-3\">마이 페이지</div>\n          <div class=\"progress progress-sm\">\n            <div class=\"progress-bar progress-bar-indeterminate\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div v-else>\n      <div class=\"page-header\">\n        <div class=\"row align-items-end\" style=\"height: 41px;\">\n          <div class=\"row pe-0\">\n            <div class=\"col-12\">\n              <div class=\"page-pretitle\">DashBoard</div>\n              <div class=\"btn-list justify-content-between align-items-center w-100\" style=\"height: 25px;\">\n                <h2 class=\"page-title\">마이페이지</h2>\n                <!-- <div v-if=\"adminMode\" class=\"btn-list justify-content-center align-items-center\">\n                    <div class=\"form-check form-switch\">\n                      <input class=\"form-check-input cursor-pointer\" type=\"checkbox\" v-model=\"adminMyPage\" role=\"switch\" checked>\n                      <span class=\"form-check-label form-check-label-on\">내 것만보기</span>\n                      <span class=\"form-check-label form-check-label-off\">전체 보기</span>\n                    </div>\n                  </div> -->\n\n              </div>\n            </div>\n\n          </div>\n\n        </div>\n      </div>\n      <div class=\"hr-text\"></div>\n      <!-- 대시보드 영역 시작-->\n      <div class=\"page-body mt-3\" id=\"pageBody\">\n        <div class=\"row row-cards\">\n          <!-- 전체 이수학점 -->\n          <div class=\"col-md-6 col-lg-3\">\n            <div class=\"card border\">\n              <div class=\"card-stamp\">\n                <div class=\"card-stamp-icon bg-blue\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"2\"\n                    stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                    class=\"icon icon-tabler icon-tabler-calculator me-2\">\n                    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n                    <path d=\"M4 3m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z\"></path>\n                    <path d=\"M8 7m0 1a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v1a1 1 0 0 1 -1 1h-6a1 1 0 0 1 -1 -1z\"></path>\n                    <path d=\"M8 14l0 .01\"></path>\n                    <path d=\"M12 14l0 .01\"></path>\n                    <path d=\"M16 14l0 .01\"></path>\n                    <path d=\"M8 17l0 .01\"></path>\n                    <path d=\"M12 17l0 .01\"></path>\n                    <path d=\"M16 17l0 .01\"></path>\n                  </svg>\n                </div>\n              </div>\n              <div class=\"card-body\">\n                <h3 class=\"card-title \">전체 이수학점</h3>\n                <div class=\"h1 my-1 me-2\">{{ memberData.totalTakenCredit }} / 130\n                </div>\n\n              </div>\n            </div>\n          </div>\n          <!-- 전공 이수학점 -->\n          <div class=\"col-md-6 col-lg-3\">\n            <div class=\"card border\">\n              <div class=\"card-stamp\">\n                <div class=\"card-stamp-icon bg-gray\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"2\"\n                    stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                    class=\"icon icon-tabler icon-tabler-cash-banknote me-2\">\n                    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n                    <path d=\"M12 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0\"></path>\n                    <path d=\"M3 6m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z\"></path>\n                    <path d=\"M18 12l.01 0\"></path>\n                    <path d=\"M6 12l.01 0\"></path>\n                  </svg>\n                </div>\n              </div>\n              <div class=\"card-body\">\n                <h3 class=\"card-title \">전공 이수학점</h3>\n                <div class=\"h1 my-1 me-2\">\n                  {{ memberData.majorTakenCredit }} / 65\n                </div>\n\n              </div>\n\n            </div>\n          </div>\n          <!-- 전체 성적 -->\n          <div class=\"col-md-6 col-lg-3\">\n            <div class=\"card border\">\n              <div class=\"card-stamp\">\n                <div class=\"card-stamp-icon bg-green\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"2\"\n                    stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                    class=\"icon icon-tabler icon-tabler-coins\">\n                    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n                    <path d=\"M9 14c0 1.657 2.686 3 6 3s6 -1.343 6 -3s-2.686 -3 -6 -3s-6 1.343 -6 3z\"></path>\n                    <path d=\"M9 14v4c0 1.656 2.686 3 6 3s6 -1.344 6 -3v-4\"></path>\n                    <path\n                      d=\"M3 6c0 1.072 1.144 2.062 3 2.598s4.144 .536 6 0c1.856 -.536 3 -1.526 3 -2.598c0 -1.072 -1.144 -2.062 -3 -2.598s-4.144 -.536 -6 0c-1.856 .536 -3 1.526 -3 2.598z\">\n                    </path>\n                    <path d=\"M3 6v10c0 .888 .772 1.45 2 2\"></path>\n                    <path d=\"M3 11c0 .888 .772 1.45 2 2\"></path>\n                  </svg>\n                </div>\n              </div>\n              <div class=\"card-body\">\n                <h3 class=\"card-title \">전체 학점</h3>\n                <div class=\"h1 my-1 me-2\">{{ memberData.totalGrade }} /<span>(4.5)</span>\n                </div>\n                <div class=\"me-auto\">\n                  <span v-if=\"memberData.previousTotalGrade === 0\"\n                    class=\"text-yellow d-inline-flex align-items-center lh-1\">\n                    성적 정보 없음\n                  </span>\n                  <span v-else-if=\"memberData.totalGradeIncrese > 0\"\n                    class=\"text-green d-inline-flex align-items-center lh-1\">\n                    {{memberData.totalGradeIncrese}}%증가\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon ms-1\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\n                      stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                      <path d=\"M3 17l6 -6l4 4l8 -8\" />\n                      <path d=\"M14 7l7 0l0 7\" />\n                    </svg>\n                  </span>\n                  <span v-else-if=\"memberData.totalGradeIncrese == 0.00\"\n                    class=\"text-yellow d-inline-flex align-items-center lh-1\">\n                    변함 없음\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon ms-1\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\n                      stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n                      <path d=\"M5 12l14 0\"></path>\n                    </svg>\n                  </span>\n                  <span v-else class=\"text-red d-inline-flex align-items-center lh-1\">\n                    {{ memberData.totalGradeIncrese }}%감소\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-trending-down\"\n                      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\"\n                      stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n                      <path d=\"M3 7l6 6l4 -4l8 8\"></path>\n                      <path d=\"M21 10l0 7l-7 0\"></path>\n                    </svg>\n                  </span>\n                </div>\n              </div>\n\n            </div>\n          </div>\n          <!-- 전공 학점  -->\n          <div class=\"col-md-6 col-lg-3\">\n            <div class=\"card border\">\n              <div class=\"card-stamp\">\n                <div class=\"card-stamp-icon bg-pink\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-zoom-money\" width=\"24\"\n                    height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\"\n                    stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n                    <path d=\"M10 10m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0\"></path>\n                    <path d=\"M21 21l-6 -6\"></path>\n                    <path d=\"M12 7h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5\"></path>\n                    <path d=\"M10 13v1m0 -8v1\"></path>\n                  </svg>\n                </div>\n              </div>\n              <div class=\"card-body\">\n                <h3 class=\"card-title \">전공 학점</h3>\n                <div class=\"h1 my-1 me-2\">{{ memberData.majorGrade }}/(4.5)</div>\n                <div class=\"me-auto\">\n                  <span v-if=\"memberData.previousMajorGrade === 0\"\n                    class=\"text-yellow d-inline-flex align-items-center lh-1\">\n                    성적 정보 없음\n                  </span>\n                  <span v-else-if=\"memberData.MajorGradeIncrese > 0\"\n                    class=\"text-green d-inline-flex align-items-center lh-1\">\n                    {{memberData.totalGradeIncrese}}%증가\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon ms-1\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\n                      stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                      <path d=\"M3 17l6 -6l4 4l8 -8\" />\n                      <path d=\"M14 7l7 0l0 7\" />\n                    </svg>\n                  </span>\n                  <span v-else-if=\"memberData.MajorGradeIncrese == 0.00\"\n                    class=\"text-yellow d-inline-flex align-items-center lh-1\">\n                    변함 없음\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon ms-1\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\n                      stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n                      <path d=\"M5 12l14 0\"></path>\n                    </svg>\n                  </span>\n                  <span v-else class=\"text-red d-inline-flex align-items-center lh-1\">\n                    {{ memberData.MajorGradeIncrese }}%감소\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-trending-down\"\n                      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\"\n                      stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n                      <path d=\"M3 7l6 6l4 -4l8 8\"></path>\n                      <path d=\"M21 10l0 7l-7 0\"></path>\n                    </svg>\n                  </span>\n                </div>\n              </div>\n\n            </div>\n          </div>\n\n        </div>\n      </div>\n      <!--  영역 끝-->\n      <ResourceAllocation :majorList=\"majorList\" \n      :generalList=\"generalList\" \n      :generalCoreList=\"generalCoreList\" \n      :majorSeries=\"majorSeries\" \n      :generalSeries=\"generalSeries\" \n      :generalCoreSeries=\"generalCoreSeries\" \n      :totalTakenCredit=\"memberData.totalTakenCredit\"\n      :majorTakenCredit=\"memberData.majorTakenCredit\"\n      :generalCoreTakenCredit=\"memberData.generalCoreTakenCredit\"\n      :majorEssentialTakenCredit=\"memberData.majorEssentialTakenCredit\"\n      :generalEssentialTakenCredit=\"memberData.generalEssentialTakenCredit\"\n      :one=\"memberData.one\"\n      :two=\"memberData.two\"\n      :three=\"memberData.three\"\n      :four=\"memberData.four\"\n      :five=\"memberData.five\"\n      :six=\"memberData.six\"\n      :creative=\"memberData.creative\"\n      :standardCredit=\"memberData.standardCredit\"\n      >\n    </ResourceAllocation>\n    <div>\n      <input v-model=\"userInput\" type=\"text\" placeholder=\"추가적인 정보를 입력하세요\" class=\"form-control mb-3\" />\n    <button v-if=\"buttonVisible\" @click=\"handleClick\" class=\"btn btn-primary mb-3\">AI에게 수강과목을 바탕으로 진로 추천받기</button>\n    <div v-if=\"loading\">\n      <h1>Loading<span class=\"animated-dots\"></span></h1>\n    </div>\n    <div v-if=\"promptResponse && !loading\" class=\"col-12\">\n      <div class=\"card card-md\">\n        <div class=\"card-stamp card-stamp-lg\">\n          <div class=\"card-stamp-icon bg-primary\">\n            <!-- 아이콘 또는 이미지 추가 -->\n            <i class=\"fas fa-robot\"></i>\n          </div>\n        </div>\n        <div class=\"card-body\">\n          <div class=\"row align-items-center\">\n            <div class=\"col-10\">\n              <h3 class=\"page-title\">응답 결과</h3>\n              <p></p>\n              <div class=\"markdown\">\n                <p ref=\"responseText\" v-html=\"promptResponse\"></p>\n              </div>\n              <div class=\"mt-3\">\n                <!-- 추가 정보 -->\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n  </div>\n</template>\n\n<script>\n\nimport ResourceAllocation from '@/components/dashboard/ResourceAllocation.vue';\n\nexport default {\n  inject: ['$axios'],\n  components: {\n    ResourceAllocation,\n  },\n  props: {},\n  data() {\n    return {\n      onLoading: true,\n      value1: \"\",\n      value2: \"\",\n      memberData: {},\n      majorList:{},  // 전공\n      generalList:{}, // 교양 \n      generalCoreList:{}, // 핵교\n      buttonVisible: true,\n      takeList : [],\n      promptResponse:\"\",\n      prompt : \"\",\n      takeString : \"\",\n      unTakeString : \"\",\n      unTakeList : [],\n      userInput: \"\"\n    };\n  },\n  mounted() {\n    this.fetchData();\n  },\n  methods: {\n    // todo : 데이터 불러오기 가능\n    fetchData() {\n      this.onLoading = true;\n      const userId=localStorage.getItem('memberId');\n      this.$axios.get('/v1/dashboard', {\n        params: {\n          memberId: userId,  \n        }\n      }).then((res) => {\n        console.log(res.data.result);\n        const result = res.data.result;\n        this.memberData = {\n          totalTakenCredit: result.totalTakenCredit || 0, // 전체 이수학점\n          majorTakenCredit: result.majorTakenCredit || 0, // 전공 이수학점\n\n          majorGrade: result.majorGrade ? parseFloat(result.majorGrade).toFixed(2) : 0.00, // 전공 학점\n          previousMajorGrade: result.previousMajorGrade? parseFloat(result.previousMajorGrade).toFixed(2) : 0.00, // 전학기까지 전공 학점성적 \n\n          totalGrade: result.totalGrade ? parseFloat(result.totalGrade).toFixed(2) : 0.00, // 총 학점 \n          previousTotalGrade: result.previousTotalGrade? parseFloat(result.previousTotalGrade).toFixed(2) : 0.00, // 전학기총 학점 성적\n\n         \n          generalCoreTakenCredit: result.generalCoreDTO.totalCredit || 0, // 핵심교양 이수학점\n          generalEssentialTakenCredit: result.takenGeneralDTO.takenEssentialCredit|| 0, // 교양 필수 학점\n          majorEssentialTakenCredit: result.takenMajorDTO.takenEssentialCredit|| 0, //전공 필수 학점\n\n          one: result.generalCoreDTO.takeOne,\n          two: result.generalCoreDTO.takeTwo,\n          three: result.generalCoreDTO.takeThree,\n          four: result.generalCoreDTO.takeFour,\n          five: result.generalCoreDTO.takeFive,\n          six: result.generalCoreDTO.takeSix,\n          creative: result.generalCoreDTO.takeCreative,\n          standardCredit : result.generalCoreDTO.standardCredit,\n\n          totalGradeIncrese : this.calculatePercentageIncrease(result.previousTotalGrade,result.totalGrade),\n          MajorGradeIncrese : this.calculatePercentageIncrease(result.previousMajorGrade,result.majorGrade),\n\n\n\n        }\n        console.log(\"seok\",this.memberData.MajorGradeIncrese);\n        //추천 전공\n        this.majorList = {\n          major: \"전공\",\n          DataList: result.takenMajorDTO.untakenTop5CourseDTOList.map(course => ({\n            hak: course.courseCode,\n            name: course.courseName,\n            grade: course.credit\n          }))\n        };\n          // 추천 교양 \n          this.generalList = {\n          major: \"교양\",\n          DataList: result.takenGeneralDTO.untakenTop5CourseDTOList.map(course => ({\n            hak: course.courseCode,\n            name: course.courseName,\n            grade: course.credit\n          }))\n        };\n\n          //추천 핵심 교양\n          this.generalCoreList = {\n          major: \"핵교\",\n          DataList: result.generalCoreDTO.untakenTop5CourseDTOList.map(course => ({\n            hak: course.courseCode,\n            name: course.courseName,\n            grade: course.credit\n          }))\n        };\n        \n        this.onLoading = false;\n      }).catch((err) => {\n        console.log(err);\n      })\n    },\n    calculatePercentageIncrease(initialValue, finalValue) {\n      // 증가율 계산\n      const increase = finalValue - initialValue;\n      const percentageIncrease = (increase / initialValue) * 100;\n\n      // 결과 반환\n      return percentageIncrease.toFixed(2);\n    },\n    fetchData2() {\n      const userId = localStorage.getItem('memberId');\n      this.$axios.get('/v1/courses/take', {\n        params: {\n          memberId: userId // 실제 사용자 ID로 변경\n        }})\n        .then(response => {\n          const responseList = response.data.result.takenCourseDTOList; // 서버에서 받은 데이터에 맞게 변경\n          console.log('받은 데이터:', responseList); // 받아온 데이터 로그\n          if (Array.isArray(responseList)) {\n            this.takeList = responseList;\n          } else {\n            console.error('받은 데이터가 배열이 아닙니다:', responseList);\n          }})\n          .catch(error => {\n            console.error('데이터 가져오기 실패:', error);\n            this.$swal(\"로그인을 해주세요.\", '', \"error\");\n          });\n          this.$axios.get('/v1/courses/untake', {\n                params: {\n                    memberId: userId // TODO : 실제 사용자 ID로 변경\n                }\n            })\n            .then(response => { \n                const responseList = response.data.result.untakenCourseDTOList;\n                this.unTakeList = responseList.map(item => ({\n                    name: item.courseName //과목명\n                }));\n                console.log(\"here\",this.unTakeList);\n            })\n            .catch(error => {\n                console.error('오류 발생1:', error); // 오류 로그 추가\n                this.$swal(\"로그인을 해주세요.\", '', \"error\");\n            })\n            .finally(() => {\n              this.generateTakeString();\n              this.generateUnTakeString();\n              console.log(\"dong\",this.unTakeList);\n            this.prompt = \"내가\" + this.userInput + \"이/가 되고싶은데 현재 수강한 과목들은 \" + this.takeString + \"이고 \" + \"미수강 과목들은 \" + this.unTakeList + \"인데 미수강 과목들에서 어떤 과목을 들으면 좋을까? 5개만 추천해줘.\";\n            console.log(\"dong1\",this.prompt);\n            this.askToAi();\n                this.onLoading = false;\n            });\n        },\n        generateTakeString() {\n          this.takeString = this.takeList\n          .filter(subject => subject.categoryName === \"전공필수\" || subject.categoryName === \"전공선택\")\n          .map(subject => subject.courseName)\n          .join(', ');\n        },\n        generateUnTakeString() {\n          this.unTakeString = this.unTakeList\n          .filter(unTakeItem)\n          .map(unTakeItem => unTakeItem.name)\n          .join(', ');\n        },\n        askToAi() {\n          // 생성한 프롬프트 데이터를 payload로 준비\n          const payload = {\n            prompt: this.prompt\n          };\n          // API 요청 보내기\n          this.$axios.post('/api', payload)\n          .then(response => {\n            // 응답 데이터를 처리하고, output 값을 promptResponse에 저장\n            this.promptResponse = response.data.output;\n            console.log('응답 받음:', this.promptResponse);\n            this.loading = false;\n          })\n          .catch(error => {\n            // 오류 처리\n            console.error('오류 발생:', error);\n            this.loading = false;\n          });\n        },\n        handleClick() {\n          this.loading = true;\n          this.fetchData2();\n          this.buttonVisible = false; // 버튼을 클릭하면 사라지게 설정\n        },\n      \n        },\n\n      watch: {},\n      };\n</script>\n\n<style scoped>\n.page-link {\n  min-width: 0 !important;\n}\n\n.date-picker-cost {\n  justify-content: end;\n}\n\n.cost-card-header {\n  justify-content: end;\n}\n\n.cost-btn-group {\n  padding-right: 0.5rem !important;\n  justify-content: end;\n  box-shadow: none;\n}\n\n\n@media (max-width: 767px) {\n  .date-picker-cost {\n    margin-top: 0.5rem;\n    justify-content: start;\n    width: 100%;\n  }\n\n  .date-picker-cost .el-date-editor {\n    width: 100%;\n    display: flex;\n  }\n\n  .cost-card-header {\n    flex-wrap: wrap;\n    justify-content: start;\n  }\n\n  .date-picker-cost {\n    margin-top: 10px;\n  }\n\n  .cost-btn-group {\n    padding-right: 0 !important;\n    justify-content: start;\n    margin-top: 10px;\n    flex-wrap: wrap;\n  }\n\n}\n\n@media (max-width: 1199px) {\n  .cost-card-header {\n    flex-wrap: wrap;\n  }\n\n  .date-picker-cost {\n    margin-top: 10px;\n  }\n\n  .cost-btn-group {\n    padding-right: 0 !important;\n  }\n}\n\n.el-date-editor>.el-date-editor>.el-range-separator {\n  line-height: 16px !important;\n}\n\n.el-input__icon {\n  line-height: 16px !important;\n}\n.markdown p {\n  font-size: 1.1em;\n  white-space: pre-wrap; /* 줄바꿈을 위한 스타일 */\n  margin: 0; /* 텍스트 주변의 여백을 제거 */\n  justify-content: end;\n}\n\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}