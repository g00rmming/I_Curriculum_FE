{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  inject: ['$axios'],\n  data() {\n    return {\n      apiurl: '/v1/members',\n      loginInfo: {\n        email: '',\n        password: ''\n      }\n    };\n  },\n  mounted: function () {},\n  methods: {\n    userValidation() {\n      // 로그인 검증 로직 추가\n      if (this.loginInfo.email && this.loginInfo.password) {\n        // 예제에서는 간단히 조건을 체크하여 로그인 처리를 합니다.\n        // 실제로는 백엔드와 통신하여 인증을 수행해야 합니다.\n        //formdata생성\n        const frm = new FormData();\n        frm.append('username', this.loginInfo.email);\n        frm.append('password', this.loginInfo.password);\n        this.$axios.post('/login', frm, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }).then(res => {\n          // // 토큰을 LocalStorage에 저장\n          // localStorage.setItem(\"authorization\", res.headers.authorization);\n          // localStorage.setItem(\"isAuthenticated\", true);\n          // localStorage.setItem(\"memberId\", res.data.memberId);\n          this.$store.dispatch('login', {\n            token: res.headers.authorization,\n            memberId: res.data.memberId,\n            password: this.loginInfo.password\n          });\n          // this.$store.commit('setUser', { username: res.data.memberId });\n\n          console.log(localStorage, \"#########################################localstroage 검사입니다#########################################3\");\n          console.log(this.$store, \"#########################################store 검사입니다!!#########################################\");\n          this.$axios.get(`${this.apiurl}/my-info/${res.data.memberId}`).then(res => {\n            console.log(res, \"test\");\n          });\n          this.$router.push({\n            name: 'dashboard'\n          });\n        }).catch(err => {\n          console.log(err);\n        });\n      } else {\n        alert('Please enter your username and password');\n      }\n    }\n  },\n  unmounted: function () {}\n};","map":{"version":3,"names":["inject","data","apiurl","loginInfo","email","password","mounted","methods","userValidation","frm","FormData","append","$axios","post","headers","then","res","$store","dispatch","token","authorization","memberId","console","log","localStorage","get","$router","push","name","catch","err","alert","unmounted"],"sources":["/Users/gimdongha/Desktop/cloudcomputing/i-curriculum_FE/src/components/user/SignInComp.vue"],"sourcesContent":["<template>\n  <div class=\"page page-center\">\n    <div class=\"container-tight py-4\">\n      <div class=\"text-center mt-4 mb-4\">\n        <h2>\n          <!-- 화이트 로고 -->\n          <img src=\"@/assets/image.png\" width=\"200px\" />\n          <!-- 블루 로고 -->\n        </h2>\n      </div>\n      <div class=\"card card-md\">\n        <div class=\"card-body\">\n          <h2 class=\"h3 text-center mb-4\">로그인 후 사용하세요</h2>\n          <form action=\"./\" method=\"get\" autocomplete=\"off\" novalidate>\n            <div class=\"mb-3\">\n              <label class=\"form-label\">아이디( ID or Email)</label>\n              <input type=\"email\" class=\"form-control\" placeholder=\"your@email.com\" autocomplete=\"off\"\n                v-model=\"loginInfo.email\" />\n            </div>\n            <div class=\"mb-2\">\n              <label class=\"form-label\">\n                비밀번호(Password)\n                <!-- <span class=\"form-label-description text-primary\">\n                    <router-link to=\"/forgotpassword\" tabindex=\"-1\" style=\"color: rgba(var(--tblr-link-color-rgb),var(--tblr-link-opacity,1))\"> 비밀번호 찾기</router-link>\n                  </span> -->\n              </label>\n              <div class=\"input-group input-group-flat\">\n                <input type=\"password\" class=\"form-control\" placeholder=\"Your password\" autocomplete=\"off\"\n                  v-model=\"loginInfo.password\" />\n                <span class=\"input-group-text\">\n                  <a href=\"#\" class=\"link-secondary\" title=\"Show password\"\n                    data-bs-toggle=\"tooltip\"><!-- Download SVG icon from http://tabler-icons.io/i/eye -->\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\n                      stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                      <path d=\"M12 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0\" />\n                      <path\n                        d=\"M22 12c-2.667 4.667 -6 7 -10 7s-7.333 -2.333 -10 -7c2.667 -4.667 6 -7 10 -7s7.333 2.333 10 7\" />\n                    </svg>\n                  </a>\n                </span>\n              </div>\n            </div>\n            <div class=\"form-footer mb-2 text-center\">\n              <a @click=\"userValidation()\" class=\"btn  btn-pill btn-primary\" role=\"button\">로그인</a>\n            </div>\n          </form>\n        </div>\n\n      </div>\n      <!--todo : 회원가입 로직을 완성하면 추가해야한다.-->\n      <div class=\"text-center text-muted mt-3\">\n        <router-link to=\"/createMember\" tabindex=\"-1\" class=\"\"\n          style=\"color: rgba(var(--tblr-link-color-rgb),var(--tblr-link-opacity,1))\">회원가입</router-link>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\n\nexport default {\n  inject: ['$axios'],\n  data() {\n    return {\n      apiurl: '/v1/members',\n      loginInfo: {\n        email: '',\n        password: ''\n      },\n    };\n  },\n  mounted: function () {\n\n  },\n  methods: {\n    userValidation() {\n      // 로그인 검증 로직 추가\n      if (this.loginInfo.email && this.loginInfo.password) {\n        // 예제에서는 간단히 조건을 체크하여 로그인 처리를 합니다.\n        // 실제로는 백엔드와 통신하여 인증을 수행해야 합니다.\n        //formdata생성\n        const frm = new FormData()\n        frm.append('username', this.loginInfo.email)\n        frm.append('password', this.loginInfo.password)\n        \n        this.$axios.post('/login', frm, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }\n        ).then((res) => {\n          // // 토큰을 LocalStorage에 저장\n          // localStorage.setItem(\"authorization\", res.headers.authorization);\n          // localStorage.setItem(\"isAuthenticated\", true);\n          // localStorage.setItem(\"memberId\", res.data.memberId);\n          this.$store.dispatch('login', { token: res.headers.authorization, memberId: res.data.memberId, password: this.loginInfo.password });\n          // this.$store.commit('setUser', { username: res.data.memberId });\n\n          console.log(localStorage, \"#########################################localstroage 검사입니다#########################################3\")\n          console.log(this.$store, \"#########################################store 검사입니다!!#########################################\");\n\n          this.$axios.get(`${this.apiurl}/my-info/${res.data.memberId}`)\n          .then((res)=>{\n              console.log(res,\"test\")            \n          })\n          this.$router.push({ name: 'dashboard' });\n        })\n          .catch((err) => {\n            console.log(err);\n          })\n      } else {\n        alert('Please enter your username and password');\n      }\n    }\n  },\n  unmounted: function () {\n  }\n};\n</script>\n\n<style>\n/* 스타일은 필요에 따라 작성하세요 */\n</style>"],"mappings":";AA8DA,eAAe;EACbA,MAAM,EAAE,CAAC,QAAQ,CAAC;EAClBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,aAAa;MACrBC,SAAS,EAAE;QACTC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;MACZ;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE,SAAAA,CAAA,EAAY,CAErB,CAAC;EACDC,OAAO,EAAE;IACPC,cAAcA,CAAA,EAAG;MACf;MACA,IAAI,IAAI,CAACL,SAAS,CAACC,KAAI,IAAK,IAAI,CAACD,SAAS,CAACE,QAAQ,EAAE;QACnD;QACA;QACA;QACA,MAAMI,GAAE,GAAI,IAAIC,QAAQ,CAAC;QACzBD,GAAG,CAACE,MAAM,CAAC,UAAU,EAAE,IAAI,CAACR,SAAS,CAACC,KAAK;QAC3CK,GAAG,CAACE,MAAM,CAAC,UAAU,EAAE,IAAI,CAACR,SAAS,CAACE,QAAQ;QAE9C,IAAI,CAACO,MAAM,CAACC,IAAI,CAAC,QAAQ,EAAEJ,GAAG,EAAE;UAC9BK,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CACA,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;UACd;UACA;UACA;UACA;UACA,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,OAAO,EAAE;YAAEC,KAAK,EAAEH,GAAG,CAACF,OAAO,CAACM,aAAa;YAAEC,QAAQ,EAAEL,GAAG,CAACf,IAAI,CAACoB,QAAQ;YAAEhB,QAAQ,EAAE,IAAI,CAACF,SAAS,CAACE;UAAS,CAAC,CAAC;UACnI;;UAEAiB,OAAO,CAACC,GAAG,CAACC,YAAY,EAAE,uGAAuG;UACjIF,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,MAAM,EAAE,iGAAiG,CAAC;UAE3H,IAAI,CAACL,MAAM,CAACa,GAAG,CAAC,GAAG,IAAI,CAACvB,MAAM,YAAYc,GAAG,CAACf,IAAI,CAACoB,QAAQ,EAAE,EAC5DN,IAAI,CAAEC,GAAG,IAAG;YACTM,OAAO,CAACC,GAAG,CAACP,GAAG,EAAC,MAAM;UAC1B,CAAC;UACD,IAAI,CAACU,OAAO,CAACC,IAAI,CAAC;YAAEC,IAAI,EAAE;UAAY,CAAC,CAAC;QAC1C,CAAC,EACEC,KAAK,CAAEC,GAAG,IAAK;UACdR,OAAO,CAACC,GAAG,CAACO,GAAG,CAAC;QAClB,CAAC;MACL,OAAO;QACLC,KAAK,CAAC,yCAAyC,CAAC;MAClD;IACF;EACF,CAAC;EACDC,SAAS,EAAE,SAAAA,CAAA,EAAY,CACvB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}