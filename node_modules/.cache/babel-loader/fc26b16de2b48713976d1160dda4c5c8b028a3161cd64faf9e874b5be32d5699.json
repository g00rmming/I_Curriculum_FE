{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.with.js\";\nimport TakeBuket from './component/TakeBuket.vue';\nexport default {\n  inject: ['$axios'],\n  components: {\n    TakeBuket: TakeBuket\n  },\n  data() {\n    return {\n      apiurl: '/v1/courses',\n      userId: localStorage.getItem('memberId'),\n      searchOption: {\n        courseName: '',\n        courseCode: '',\n        isMajorEssential: true,\n        isMajorSelective: true,\n        isGeneralEssential: true,\n        isGeneralSelective: true,\n        isGeneralCore: true\n      },\n      modalType: 'add',\n      onLoading: false,\n      // 데이터를 가져오면 onloading의 값이 false가 된다.\n      isSidebarOpen: false,\n      isContentClass1: true,\n      showShortTable: true,\n      showLongTable: false,\n      // 조회해서 가져올 데이터\n\n      tabId: \"tabs-name\",\n      unTakeList: [],\n      MyBucketList: [],\n      courseData: {} // 신청 컴포넌트에 들어갈 DATA\n    };\n  },\n  mounted() {\n    console.log('mounted 호출됨');\n    this.fetchData();\n  },\n  methods: {\n    handleTabClick(tabId) {\n      this.tabId = tabId;\n    },\n    searchData() {\n      console.log(this.searchOption, \"test\");\n      this.onLoading = true;\n      this.$axios.post(`${this.apiurl}/untake/search`, this.searchOption, {\n        params: {\n          memberId: this.userId\n        }\n      }).then(res => {\n        const resList = res.data.result.untakenCourseDTOList;\n        this.unTakeList = resList.map(item => ({\n          hak: item.courseCode,\n          // 학수번호\n          courseId: item.courseId,\n          name: item.courseName,\n          // 과목명\n          code: item.categoryName,\n          // 영역\n          grade: item.credit,\n          // 학점\n          year: item.level,\n          // 이수학기\n          people: item.takenNumber // 수강인원\n        }));\n        this.onLoading = false;\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    fetchData() {\n      // 데이터를 가져오는 함수\n      this.onLoading = true;\n      console.log('fetchData 호출됨'); // 로그 추가\n\n      this.$axios.get(`${this.apiurl}/untake`, {\n        params: {\n          memberId: this.userId // TODO : 실제 사용자 ID로 변경\n        }\n      }).then(response => {\n        console.log('응답 받음:', response.data);\n        const responseList = response.data.result.untakenCourseDTOList;\n        this.unTakeList = responseList.map(item => ({\n          hak: item.courseCode,\n          // 학수번호\n          courseId: item.courseId,\n          name: item.courseName,\n          // 과목명\n          code: item.categoryName,\n          // 영역\n          grade: item.credit,\n          // 학점\n          year: item.level,\n          // 이수학기\n          people: item.takenNumber // 수강인원\n        }));\n        console.log(\"here\", this.unTakeList);\n      }).catch(error => {\n        console.error('오류 발생1:', error); // 오류 로그 추가\n      }).finally(() => {\n        this.onLoading = false;\n      });\n    },\n    reset() {\n      this.courseName = '', this.courseCode = '', this.isMajorEssential = true, this.isMajorSelective = true, this.isGeneralEssential = true, this.isGeneralSelective = true, this.isGeneralCore = true;\n    },\n    toggleSidebar() {\n      this.isSidebarOpen = !this.isSidebarOpen;\n      this.isContentClass1 = !this.isContentClass1;\n    },\n    toggleModal(idx, item, type) {\n      // 장바구니 모달 여는 함수\n      this.courseData = item;\n      if (type === 'update') {\n        this.modalType = idx;\n      } else {\n        this.modalType = type;\n      }\n      this.$refs.updateModalComponent.clickModal();\n    },\n    toggleTable() {\n      // 테이블 접기 늘리기\n      this.showLongTable = !this.showLongTable;\n      this.showShortTable = !this.showShortTable;\n    },\n    AddTake() {\n      // MyBucketList를 CreateTakeDTO 형식으로 변환\n      const userId = localStorage.getItem('memberId');\n      const createTakeDTOList = this.MyBucketList.map(item => {\n        return {\n          courseId: Number(item.courseId),\n          // 실제 데이터에서 적절한 필드를 매핑하세요\n          takenTerm: Number(item.myYear),\n          // 이수학기\n          grade: String(item.myGrade),\n          // 성적 (문자열로 변환)\n          category: String(item.code) // 영역\n        };\n      });\n\n      // CreateTakeListDTO 형식으로 데이터 래핑\n      const requestData = {\n        createTakeDTOList: createTakeDTOList\n      };\n      this.$axios.post('/v1/courses/take/new', requestData, {\n        params: {\n          memberId: userId // TODO: 실제 사용자 ID로 변경\n        }\n      }).then(response => {\n        console.log('응답 받음:', response.data);\n        this.$swal(\"이수내역 추가완료\", '', 'success').then(val => {\n          if (val.isConfirmed) {\n            this.$router.push('/MyTake');\n          }\n        });\n      }).catch(error => {\n        console.error('오류 발생2:', error);\n        this.$swal(\"이수내역 추가에 실패했습니다.\", '', \"error\");\n      });\n    },\n    addItem(item) {\n      // 장바구니에 추가하는 함수\n      if (!item.code || !item.grade || !item.myYear) {\n        this.$swal(\"영역, 학점, 이수학기를 모두 입력하세요.\", '', \"warning\");\n        return;\n      }\n      const addItem = item;\n      this.MyBucketList.push(addItem);\n      this.MyBucketList.forEach((item, index) => {\n        console.log(`Item ${index + 1}:`);\n        console.log(`  courseId: ${item.courseId}`);\n        console.log(`  hak: ${item.hak}`);\n        console.log(`  name: ${item.name}`);\n        console.log(`  code: ${item.code}`);\n        console.log(`  myGrade: ${item.myGrade}`);\n        console.log(`  myYear: ${item.myYear}`);\n      });\n      this.$refs.updateModalComponent.closeModal();\n      this.$swal(\"장바구니 추가완료\", '', \"success\");\n    },\n    updateItem(idx, item) {\n      // 장바구니에 추가하는 함수\n      const addItem = item;\n      this.MyBucketList.with(idx, addItem);\n      this.$refs.updateModalComponent.closeModal();\n      this.$swal(\"수정완료\", '', \"success\");\n    },\n    deleteBucketData(idx) {\n      this.$swal({\n        title: \"삭제 하시겠습니까?\",\n        type: \"warning\",\n        icon: \"question\",\n        showCancelButton: true,\n        confirmButtonClass: \"btn-danger\",\n        confirmButtonText: \"예\",\n        cancelButtonText: \"아니오\",\n        closeOnConfirm: true,\n        closeOnCancel: true\n      }).then(result => {\n        if (result.isConfirmed) {\n          this.MyBucketList.splice(idx, 1);\n          this.$swal(\"삭제완료\", '', \"success\");\n        }\n      });\n    }\n  },\n  computed: {\n    showBtnVisible() {\n      return this.showShortTable;\n    },\n    hideBtnVisible() {\n      return this.showLongTable;\n    }\n  },\n  watch: {}\n};","map":{"version":3,"names":["TakeBuket","inject","components","data","apiurl","userId","localStorage","getItem","searchOption","courseName","courseCode","isMajorEssential","isMajorSelective","isGeneralEssential","isGeneralSelective","isGeneralCore","modalType","onLoading","isSidebarOpen","isContentClass1","showShortTable","showLongTable","tabId","unTakeList","MyBucketList","courseData","mounted","console","log","fetchData","methods","handleTabClick","searchData","$axios","post","params","memberId","then","res","resList","result","untakenCourseDTOList","map","item","hak","courseId","name","code","categoryName","grade","credit","year","level","people","takenNumber","catch","err","get","response","responseList","error","finally","reset","toggleSidebar","toggleModal","idx","type","$refs","updateModalComponent","clickModal","toggleTable","AddTake","createTakeDTOList","Number","takenTerm","myYear","String","myGrade","category","requestData","$swal","val","isConfirmed","$router","push","addItem","forEach","index","closeModal","updateItem","with","deleteBucketData","title","icon","showCancelButton","confirmButtonClass","confirmButtonText","cancelButtonText","closeOnConfirm","closeOnCancel","splice","computed","showBtnVisible","hideBtnVisible","watch"],"sources":["/Users/gimdongha/Desktop/cloudcomputing/i-curriculum_FE/src/views/coursemangent/UnTake.vue"],"sourcesContent":["<template>\n\n    <div class=\"d-flex\">\n        <div class=\"side-filter border-end\" v-if=\"isSidebarOpen\">\n            <!--필터 시작-->\n            <div class=\"\" style=\"width: 100%; padding: 25px\">\n                <form action=\"./\" method=\"get\" autocomplete=\"off\" novalidate=\"\">\n                    <div class=\"subheader mb-2\">검색 필터</div>\n                    <div class=\"list-group list-group-transparent mb-3\">\n                        <a class=\"list-group-item list-group-item-action d-flex align-items-center active\" href=\"#\">\n                            과목 개수\n                            <small class=\"text-secondary ms-auto\">24</small>\n                        </a>\n                    </div>\n                    <ul class=\"nav nav-tabs card-header-tabs\" data-bs-toggle=\"tabs\">\n                        <li class=\"nav-item\">\n                            <a href=\"#tabs-name\" :class=\"{ active: tabId === 'tabs-name' }\" class=\"nav-link\"\n                                @click=\"handleTabClick('tabs-name')\" data-bs-toggle=\"tab\">&nbsp;&nbsp;강의명&nbsp;&nbsp;</a>\n                        </li>\n                        <li class=\"nav-item\">\n                            <a href=\"#tabs-code\" :class=\"{ active: tabId === 'tabs-code' }\" class=\"nav-link\"\n                                @click=\"handleTabClick('tabs-code')\" data-bs-toggle=\"tab\">학수번호</a>\n                        </li>\n                    </ul>\n                    <div class=\"card-body\">\n                        <div class=\"tab-content\">\n                            <div class=\"tab-pane\" :class=\"{ active: tabId === 'tabs-name' }\">\n                                <div class=\"subheader mb-2\">강의명</div>\n                                <div class=\"mb-3\">\n                                    <input v-model=\"searchOption.courseName\" placeholder=\"강의명을 입력하세요\">\n                                </div>\n                                <div class=\"subheader mb-2\"> 영역 </div>\n                                <div class=\"mb-3\">\n                                    <label class=\"form-check\">\n                                        <input type=\"checkbox\" class=\"form-check-input\"\n                                            v-model=\"searchOption.isMajorEssential\" name=\"form-tags[]\" value=\"business\">\n                                        <span class=\"form-check-label\">전공 필수</span>\n                                    </label>\n                                    <label class=\"form-check\">\n                                        <input type=\"checkbox\" class=\"form-check-input\"\n                                            v-model=\"searchOption.isMajorSelective\" name=\"form-tags[]\" value=\"evening\">\n                                        <span class=\"form-check-label\">전공 선택</span>\n                                    </label>\n                                    <label class=\"form-check\">\n                                        <input type=\"checkbox\" class=\"form-check-input\"\n                                            v-model=\"searchOption.isGeneralEssential\" name=\"form-tags[]\" value=\"party\">\n                                        <span class=\"form-check-label\">교양 필수</span>\n                                    </label>\n                                    <label class=\"form-check\">\n                                        <input type=\"checkbox\" class=\"form-check-input\"\n                                            v-model=\"searchOption.isGeneralSelective\" name=\"form-tags[]\" value=\"party\">\n                                        <span class=\"form-check-label\">교양 선택</span>\n                                    </label>\n                                    <label class=\"form-check\">\n                                        <input type=\"checkbox\" class=\"form-check-input\"\n                                            v-model=\"searchOption.isGeneralCore\" name=\"form-tags[]\" value=\"party\">\n                                        <span class=\"form-check-label\">핵심 교양</span>\n                                    </label>\n                                </div>\n                            </div>\n                            <div class=\"tab-pane\" :class=\"{ active: tabId === 'tabs-code' }\">\n                                <div class=\"subheader mb-2\">학수번호</div>\n                                <div class=\"mb-3\">\n                                    <input v-model=\"searchOption.courseCode\" placeholder=\"학수번호를 입력하세요\">\n                                </div>\n                                <div class=\"subheader mb-2\"> 영역 </div>\n                                <div class=\"mb-3\">\n                                    <label class=\"form-check\">\n                                        <input type=\"checkbox\" class=\"form-check-input\"\n                                            v-model=\"searchOption.isMajorEssential\" name=\"form-tags[]\" value=\"business\">\n                                        <span class=\"form-check-label\">전공 필수</span>\n                                    </label>\n                                    <label class=\"form-check\">\n                                        <input type=\"checkbox\" class=\"form-check-input\"\n                                            v-model=\"searchOption.isMajorSelective\" name=\"form-tags[]\" value=\"evening\">\n                                        <span class=\"form-check-label\">전공 선택</span>\n                                    </label>\n                                    <label class=\"form-check\">\n                                        <input type=\"checkbox\" class=\"form-check-input\"\n                                            v-model=\"searchOption.isGeneralEssential\" name=\"form-tags[]\" value=\"party\">\n                                        <span class=\"form-check-label\">교양 필수</span>\n                                    </label>\n                                    <label class=\"form-check\">\n                                        <input type=\"checkbox\" class=\"form-check-input\"\n                                            v-model=\"searchOption.isGeneralSelective\" name=\"form-tags[]\" value=\"party\">\n                                        <span class=\"form-check-label\">교양 선택</span>\n                                    </label>\n                                    <label class=\"form-check\">\n                                        <input type=\"checkbox\" class=\"form-check-input\"\n                                            v-model=\"searchOption.isGeneralCore\" name=\"form-tags[]\" value=\"party\">\n                                        <span class=\"form-check-label\">핵심 교양</span>\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <div class=\"mt-5\">\n                        <a @click=\"searchData\" class=\"btn btn-primary w-100\">\n                            검색\n                        </a>\n                        <a class=\"btn btn-link w-100\" @click=\"reset()\">\n                            초기화\n                        </a>\n                    </div>\n                </form>\n            </div>\n        </div>\n\n\n        <div style=\"padding: 0 1rem; overflow: auto;\"\n            :class=\"{ 'sidebar-open': isSidebarOpen, 'container': isContentClass1, 'container-filter': !isContentClass1 }\">\n\n            <div class=\"page-header\">\n                <div class=\"row align-items-end project-header\">\n                    <div>\n                        <div class=\"page-pretitle\">수강 조회</div>\n                        <div class=\"btn-list\" style=\"height: 25px; display: flex; \">\n                            <h2 class=\"page-title\">검색 필터</h2>\n\n                            <!-- filter 필터 버튼 -->\n                            <button class=\"form-selectgroup-label\" style=\"padding: 0px 10px; height: 25px;\"\n                                @click=\"toggleSidebar\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-filter m-0\"\n                                    width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\"\n                                    fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                                    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n                                    <path\n                                        d=\"M4 4h16v2.172a2 2 0 0 1 -.586 1.414l-4.414 4.414v7l-6 2v-8.5l-4.48 -4.928a2 2 0 0 1 -.52 -1.345v-2.227z\">\n                                    </path>\n                                </svg>\n                            </button>\n\n                        </div>\n\n                    </div>\n\n                </div>\n            </div>\n            <div class=\"hr-text\"></div>\n\n            <!--내가 추가한 과목들-->\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    <h3 class=\"card-title\" style=\"padding: 0.8rem; \">장바구니</h3>\n                    <div class=\"btn btn-pill\" style=\"margin: 10px 10px 10px 10px; padding: 0.4rem\" @click=\"AddTake\">\n                        &nbsp;\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n                            stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                            class=\"icon icon-tabler icons-tabler-outline icon-tabler-table-plus\">\n                            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                            <path d=\"M12.5 21h-7.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v7.5\" />\n                            <path d=\"M3 10h18\" />\n                            <path d=\"M10 3v18\" />\n                            <path d=\"M16 19h6\" />\n                            <path d=\"M19 16v6\" />\n                        </svg>\n                        이수내역 추가하기\n                    </div>\n                </div>\n\n                <div class=\"card-body\">\n                    <div class=\"table-responsive\">\n\n                        <table class=\"table table-vcenter table-nowrap\">\n                            <thead>\n                                <tr>\n                                    <th>학수번호</th>\n                                    <th>과목명</th>\n                                    <th>영역</th>\n                                    <th>학점</th>\n                                    <th>이수학년</th>\n                                    <th class=\"w-1\"></th>\n                                </tr>\n                            </thead>\n                            <tbody v-if='MyBucketList.length > 0'>\n                                <tr v-for=\"(item, index) in MyBucketList\" :key=\"index\">\n                                    <td>{{ item.hak }}</td>\n                                    <td @click=\"toggleModal(index, item, 'update')\"><a class=\"text-ellipsis-project\">{{\n                                        item.name }}</a></td>\n                                    <td>{{ item.code }}</td>\n                                    <td>{{ item.myGrade }}</td>\n                                    <td>{{ item.myYear }}</td>\n                                    <td>\n                                        <a class=\"text-ellipsis-project\" @click=\"deleteBucketData(index)\">삭제</a>\n                                    </td>\n                                </tr>\n                            </tbody>\n                            <tbody v-else>\n                                <tr>\n                                    <td colspan=\"5\">추가한 과목이없습니다.</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n\n                </div>\n            </div>\n\n            <div class=\"hr-text\"></div>\n            <div class=\"card\">\n                <!--데이터를 불러오는중이면 로딩바-->\n                <div v-if=\"onLoading\" class=\"progress progress-sm\">\n                    <div class=\"progress-bar progress-bar-indeterminate bg-red\"></div>\n                </div>\n                <div v-else>\n                    <!-- 스크롤 관리-->\n                    <div class=\"card-header\" style=\"padding: 0.8rem; \">\n                        <h3 class=\"card-title\">과목조회</h3>\n                        <div id=\"show_btn\" v-show=\"showBtnVisible\" @click=\"toggleTable\" class=\"btn btn-pill\"\n                            style=\"margin: 10px 10px 10px 10px; padding: 0.4rem\">\n                            &nbsp;\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\n                                fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n                                stroke-linejoin=\"round\"\n                                class=\"icon icon-tabler icons-tabler-outline icon-tabler-arrow-down\">\n                                <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                                <path d=\"M12 5l0 14\" />\n                                <path d=\"M18 13l-6 6\" />\n                                <path d=\"M6 13l6 6\" />\n                            </svg>\n                            펼치기\n                        </div>\n                        <div id=\"hide_btn\" v-show=\"hideBtnVisible\" @click=\"toggleTable\" class=\"btn btn-pill\"\n                            style=\"margin: 10px 10px 10px 10px; padding: 0.4rem\">&nbsp;\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\n                                fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n                                stroke-linejoin=\"round\"\n                                class=\"icon icon-tabler icons-tabler-outline icon-tabler-arrow-up\">\n                                <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                                <path d=\"M12 5l0 14\" />\n                                <path d=\"M18 11l-6 -6\" />\n                                <path d=\"M6 11l6 -6\" />\n                            </svg>\n                            접기\n                        </div>\n                    </div>\n                    <div class=\"card-body long_tbody\">\n                        <!--과목 조회 창-->\n                        <div class=\"table-responsive\">\n                            <!-- 접어둘때 이용-->\n                            <table id=\"long_table\" v-show=\"showLongTable\" class=\"table table-vcenter\">\n                                <thead>\n                                    <tr>\n                                        <th>학수번호</th>\n                                        <th>과목명</th>\n                                        <th>영역</th>\n                                        <th>학점</th>\n                                        <th>이수학년</th>\n                                        <th>수강인원</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n\n\n                                    <tr v-for=\"(item, index) in unTakeList\" :key=\"index\">\n                                        <td>{{ item.hak }}</td>\n                                        <td><a class=\"text-ellipsis-project\" @click=\"toggleModal(index, item, 'add')\">{{\n                                            item.name }}</a>\n                                        </td>\n                                        <td>{{ item.code }}</td>\n                                        <td>{{ item.grade }}</td>\n                                        <td>{{ item.year }}</td>\n                                        <td>{{ item.people }}</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                            <table id=\"short_table\" v-show=\"showShortTable\" class=\"table table-vcenter \">\n                                <thead>\n                                    <tr>\n                                        <th>학수번호</th>\n                                        <th>과목명</th>\n                                        <th>영역</th>\n                                        <th>학점</th>\n                                        <th>이수학년</th>\n                                        <th>수강인원</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr v-for=\"(item, index) in unTakeList.slice(0, 5)\" :key=\"index\">\n                                        <td>{{ item.hak }}</td>\n                                        <td><a class=\"text-ellipsis-project\" @click=\"toggleModal(index, item, 'add')\">{{\n                                            item.name }}</a>\n                                        </td>\n                                        <td>{{ item.code }}</td>\n                                        <td>{{ item.grade }}</td>\n                                        <td>{{ item.year }}</td>\n                                        <td>{{ item.people }}</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n\n                    </div>\n                </div>\n\n            </div>\n\n        </div>\n\n\n\n\n        <TakeBuket ref=\"updateModalComponent\" :modalType=\"modalType\" :courseData=\"courseData\" :updateItem=\"updateItem\"\n            :addItem=\"addItem\"></TakeBuket>\n\n\n    </div>\n\n\n\n</template>\n\n<script>\n\nimport TakeBuket from './component/TakeBuket.vue'\n\n\nexport default {\n    inject: ['$axios'],\n    components: {\n        TakeBuket: TakeBuket,\n    },\n    data() {\n        return {\n            apiurl: '/v1/courses',\n            userId: localStorage.getItem('memberId'),\n            searchOption: {\n                courseName: '',\n                courseCode: '',\n                isMajorEssential: true,\n                isMajorSelective: true,\n                isGeneralEssential: true,\n                isGeneralSelective: true,\n                isGeneralCore: true,\n            },\n            modalType: 'add',\n            onLoading: false,  // 데이터를 가져오면 onloading의 값이 false가 된다.\n            isSidebarOpen: false,\n            isContentClass1: true,\n\n            showShortTable: true,\n            showLongTable: false,\n            // 조회해서 가져올 데이터\n\n            tabId: \"tabs-name\",\n            unTakeList: [],\n            MyBucketList: [],\n            courseData: {}, // 신청 컴포넌트에 들어갈 DATA\n\n        }\n    },\n    mounted() {\n        console.log('mounted 호출됨');\n        this.fetchData();\n    },\n    methods: {\n        handleTabClick(tabId) {\n            this.tabId = tabId;\n        },\n        searchData() {\n            console.log(this.searchOption, \"test\");\n            this.onLoading = true;\n            this.$axios.post(`${this.apiurl}/untake/search`, this.searchOption\n                , {\n                    params: {\n                        memberId: this.userId\n                    }\n                }).then((res) => {\n                    const resList = res.data.result.untakenCourseDTOList;\n                    this.unTakeList = resList.map(item => ({\n                        hak: item.courseCode, // 학수번호\n                        courseId: item.courseId,\n                        name: item.courseName, // 과목명\n                        code: item.categoryName, // 영역\n                        grade: item.credit, // 학점\n                        year: item.level, // 이수학기\n                        people: item.takenNumber // 수강인원\n                    }));\n                    this.onLoading = false\n                }).catch((err) => {\n                    console.log(err)\n                })\n        },\n        fetchData() { // 데이터를 가져오는 함수\n            this.onLoading = true;\n            console.log('fetchData 호출됨'); // 로그 추가\n\n            this.$axios.get(`${this.apiurl}/untake`, {\n                params: {\n                    memberId: this.userId // TODO : 실제 사용자 ID로 변경\n                }\n            })\n                .then(response => {\n                    console.log('응답 받음:', response.data);\n                    const responseList = response.data.result.untakenCourseDTOList;\n                    this.unTakeList = responseList.map(item => ({\n                        hak: item.courseCode, // 학수번호\n                        courseId: item.courseId,\n                        name: item.courseName, // 과목명\n                        code: item.categoryName, // 영역\n                        grade: item.credit, // 학점\n                        year: item.level, // 이수학기\n                        people: item.takenNumber // 수강인원\n                    }));\n                    console.log(\"here\", this.unTakeList);\n                })\n                .catch(error => {\n                    console.error('오류 발생1:', error); // 오류 로그 추가\n                })\n                .finally(() => {\n                    this.onLoading = false;\n                });\n        },\n        reset() {\n            this.courseName = '',\n            this.courseCode = '',\n            this.isMajorEssential = true,\n            this.isMajorSelective = true,\n            this.isGeneralEssential = true,\n            this.isGeneralSelective = true,\n            this.isGeneralCore = true\n        },\n        toggleSidebar() {\n            this.isSidebarOpen = !this.isSidebarOpen;\n            this.isContentClass1 = !this.isContentClass1;\n        },\n        toggleModal(idx, item, type) { // 장바구니 모달 여는 함수\n            this.courseData = item;\n            if (type === 'update') {\n                this.modalType = idx\n            } else {\n                this.modalType = type;\n            }\n            this.$refs.updateModalComponent.clickModal();\n        },\n        toggleTable() { // 테이블 접기 늘리기\n            this.showLongTable = !this.showLongTable;\n            this.showShortTable = !this.showShortTable;\n        },\n        AddTake() {\n            // MyBucketList를 CreateTakeDTO 형식으로 변환\n            const userId = localStorage.getItem('memberId');\n            const createTakeDTOList = this.MyBucketList.map(item => {\n                return {\n                    courseId: Number(item.courseId), // 실제 데이터에서 적절한 필드를 매핑하세요\n                    takenTerm: Number(item.myYear), // 이수학기\n                    grade: String(item.myGrade), // 성적 (문자열로 변환)\n                    category: String(item.code) // 영역\n                };\n            });\n\n            // CreateTakeListDTO 형식으로 데이터 래핑\n            const requestData = {\n                createTakeDTOList: createTakeDTOList\n            };\n\n            this.$axios.post('/v1/courses/take/new', requestData, {\n                params: {\n                    memberId: userId // TODO: 실제 사용자 ID로 변경\n                }\n            })\n                .then(response => {\n                    console.log('응답 받음:', response.data);\n                    this.$swal(\"이수내역 추가완료\", '', 'success')\n                        .then((val) => {\n                            if (val.isConfirmed) {\n                                this.$router.push('/MyTake');\n                            }\n                        });\n                })\n                .catch(error => {\n                    console.error('오류 발생2:', error);\n                    this.$swal(\"이수내역 추가에 실패했습니다.\", '', \"error\");\n                });\n        }\n        ,\n        addItem(item) { // 장바구니에 추가하는 함수\n            if (!item.code || !item.grade || !item.myYear) {\n                this.$swal(\"영역, 학점, 이수학기를 모두 입력하세요.\", '', \"warning\");\n                return;\n            }\n\n            const addItem = item;\n            this.MyBucketList.push(addItem)\n            this.MyBucketList.forEach((item, index) => {\n                console.log(`Item ${index + 1}:`);\n                console.log(`  courseId: ${item.courseId}`);\n                console.log(`  hak: ${item.hak}`);\n                console.log(`  name: ${item.name}`);\n                console.log(`  code: ${item.code}`);\n                console.log(`  myGrade: ${item.myGrade}`);\n                console.log(`  myYear: ${item.myYear}`);\n            });\n\n            this.$refs.updateModalComponent.closeModal();\n            this.$swal(\"장바구니 추가완료\", '', \"success\");\n        },\n        updateItem(idx, item) { // 장바구니에 추가하는 함수\n            const addItem = item;\n            this.MyBucketList.with(idx, addItem)\n            this.$refs.updateModalComponent.closeModal();\n            this.$swal(\"수정완료\", '', \"success\");\n        },\n        deleteBucketData(idx) {\n            this.$swal({\n                title: \"삭제 하시겠습니까?\",\n                type: \"warning\",\n                icon: \"question\",\n                showCancelButton: true,\n                confirmButtonClass: \"btn-danger\",\n                confirmButtonText: \"예\",\n                cancelButtonText: \"아니오\",\n                closeOnConfirm: true,\n                closeOnCancel: true\n            }).then((result) => {\n                if (result.isConfirmed) {\n                    this.MyBucketList.splice(idx, 1);\n                    this.$swal(\"삭제완료\", '', \"success\");\n                }\n            })\n        }\n\n    },\n    computed: {\n        showBtnVisible() {\n            return this.showShortTable;\n        },\n        hideBtnVisible() {\n            return this.showLongTable;\n        },\n    },\n    watch: {\n\n    }\n}\n\n</script>\n\n<style>\n.long_tbody {\n    display: block;\n    width: 100%;\n    max-height: 600px;\n    overflow: auto;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}