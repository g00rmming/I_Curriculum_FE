{"ast":null,"code":"export default {\n  data() {\n    return {\n      takeList: [],\n      takeString: \"\",\n      promptResponse: \"\",\n      prompt: \"\",\n      unTakeString: \"\",\n      unTakeList: [],\n      userInput: \"\"\n    };\n  },\n  mounted() {\n    this.fetchData();\n  },\n  methods: {\n    async fetchData() {\n      this.onLoading = true;\n      const userId = localStorage.getItem('memberId');\n      try {\n        const takenCoursesResponse = await this.$axios.get('/v1/courses/take', {\n          params: {\n            memberId: userId\n          }\n        });\n        const takenCoursesResult = takenCoursesResponse.data.result.takenCourseDTOList;\n        if (Array.isArray(takenCoursesResult)) {\n          this.takeList = takenCoursesResult;\n        } else {\n          console.error('받은 데이터가 배열이 아닙니다:', takenCoursesResult);\n        }\n        const untakenCoursesResponse = await this.$axios.get('/v1/courses/untake', {\n          params: {\n            memberId: userId\n          }\n        });\n        const untakenCoursesResult = untakenCoursesResponse.data.result.untakenCourseDTOList;\n        this.unTakeList = untakenCoursesResult.map(item => ({\n          hak: item.courseCode,\n          courseId: item.courseId,\n          name: item.courseName,\n          code: item.categoryName,\n          grade: item.credit,\n          year: item.level,\n          people: item.takenNumber\n        }));\n      } catch (error) {\n        console.error('데이터 가져오기 실패:', error);\n      } finally {\n        this.onLoading = false;\n      }\n    },\n    generateTakeString() {\n      this.takeString = this.takeList.filter(subject => subject.categoryName === \"전공필수\" || subject.categoryName === \"전공선택\").map(subject => subject.courseName).join(', ');\n    },\n    generateUnTakeString() {\n      this.unTakeString = this.unTakeList.map(item => item.name).join(', ');\n    },\n    askToAi() {\n      const payload = {\n        prompt: this.prompt\n      };\n      this.$axios.post('/api', payload).then(response => {\n        this.promptResponse = response.data.output;\n        console.log('응답 받음:', this.promptResponse);\n        this.loading = false;\n      }).catch(error => {\n        console.error('오류 발생:', error);\n        this.loading = false;\n      });\n    },\n    handleClick() {\n      if (!this.userInput.trim()) {\n        this.$swal(\"희망 직종을 입력하세요.\", '', \"warning\");\n        return;\n      }\n      this.loading = true;\n      this.generateTakeString();\n      this.generateUnTakeString();\n      this.prompt = `내가 ${this.userInput}이/가 되고싶은데 현재 수강한 과목들은 {${this.takeString}}이고 미수강 과목들은 {${this.unTakeString}|인데 어떤 과목을 들으면 좋을까? 수강과목들을 제외한 미수강 과목들에서 과목명 그대로 5개만 추천해줘.`;\n      this.askToAi();\n    }\n  }\n};","map":{"version":3,"names":["data","takeList","takeString","promptResponse","prompt","unTakeString","unTakeList","userInput","mounted","fetchData","methods","onLoading","userId","localStorage","getItem","takenCoursesResponse","$axios","get","params","memberId","takenCoursesResult","result","takenCourseDTOList","Array","isArray","console","error","untakenCoursesResponse","untakenCoursesResult","untakenCourseDTOList","map","item","hak","courseCode","courseId","name","courseName","code","categoryName","grade","credit","year","level","people","takenNumber","generateTakeString","filter","subject","join","generateUnTakeString","askToAi","payload","post","then","response","output","log","loading","catch","handleClick","trim","$swal"],"sources":["/Users/gimdongha/Desktop/cloudcomputing/i-curriculum_FE/src/views/coursemangent/component/RecommandSubject.vue"],"sourcesContent":["<template>\n     <div>\n        <input v-model=\"userInput\" type=\"text\" placeholder=\"희망 직종을 입력하세요. ex) 백엔드 개발자\" class=\"form-control mb-3\" />\n        <button v-if=\"buttonVisible\" @click=\"handleClick\" class=\"btn btn-primary mb-3\">AI에게 과목 추천받기</button>\n        <div v-if=\"loading\">\n          <h1>Loading<span class=\"animated-dots\"></span></h1>\n        </div>\n        <div v-if=\"promptResponse && !loading\" class=\"col-12\">\n          <div class=\"card card-md\">\n            <div class=\"card-stamp card-stamp-lg\">\n              <div class=\"card-stamp-icon bg-primary\">\n                <!-- 아이콘 또는 이미지 추가 -->\n                <i class=\"fas fa-robot\"></i>\n              </div>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"row align-items-center\">\n                <div class=\"col-10\">\n                  <h3 class=\"page-title\">응답 결과</h3>\n                  <p></p>\n                  <div class=\"markdown\">\n                    <p ref=\"responseText\" v-html=\"promptResponse\"></p>\n                  </div>\n                  <div class=\"mt-3\">\n                    <!-- 추가 정보 -->\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n</template>\n\n<script>\n    export default {\n        data() {\n            return{\n                takeList : [],\n                takeString : \"\",\n                promptResponse:\"\",\n                prompt : \"\",\n                unTakeString : \"\",\n                unTakeList : [],\n                userInput: \"\"\n            }\n        },\n        mounted() {\n            this.fetchData();\n        },\n        methods: {\n            async fetchData() {\n      this.onLoading = true;\n      const userId = localStorage.getItem('memberId');\n      \n      try {\n        const takenCoursesResponse = await this.$axios.get('/v1/courses/take', {\n            params: { memberId: userId }\n        });\n        \n        const takenCoursesResult = takenCoursesResponse.data.result.takenCourseDTOList;\n        if (Array.isArray(takenCoursesResult)) {\n          this.takeList = takenCoursesResult;\n        } else {\n          console.error('받은 데이터가 배열이 아닙니다:', takenCoursesResult);\n        }\n\n        const untakenCoursesResponse = await this.$axios.get('/v1/courses/untake', {\n          params: { memberId: userId }\n        });\n\n        const untakenCoursesResult = untakenCoursesResponse.data.result.untakenCourseDTOList;\n        this.unTakeList = untakenCoursesResult.map(item => ({\n          hak: item.courseCode,\n          courseId: item.courseId,\n          name: item.courseName,\n          code: item.categoryName,\n          grade: item.credit,\n          year: item.level,\n          people: item.takenNumber\n        }));\n        \n      } catch (error) {\n        console.error('데이터 가져오기 실패:', error);\n      } finally {\n        this.onLoading = false;\n      }\n    },\n\n    generateTakeString() {\n      this.takeString = this.takeList\n        .filter(subject => subject.categoryName === \"전공필수\" || subject.categoryName === \"전공선택\")\n        .map(subject => subject.courseName)\n        .join(', ');\n    },\n\n    generateUnTakeString() {\n      this.unTakeString = this.unTakeList\n        .map(item => item.name)\n        .join(', ');\n    },\n\n    askToAi() {\n      const payload = {\n        prompt: this.prompt\n      };\n\n      this.$axios.post('/api', payload)\n        .then(response => {\n          this.promptResponse = response.data.output;\n          console.log('응답 받음:', this.promptResponse);\n          this.loading = false;\n        })\n        .catch(error => {\n          console.error('오류 발생:', error);\n          this.loading = false;\n        });\n    },\n\n    handleClick() {\n      if (!this.userInput.trim()) {\n        this.$swal(\"희망 직종을 입력하세요.\", '', \"warning\");\n        return;\n      }\n      this.loading = true;\n      this.generateTakeString();\n      this.generateUnTakeString();\n      this.prompt = `내가 ${this.userInput}이/가 되고싶은데 현재 수강한 과목들은 {${this.takeString}}이고 미수강 과목들은 {${this.unTakeString}|인데 어떤 과목을 들으면 좋을까? 수강과목들을 제외한 미수강 과목들에서 과목명 그대로 5개만 추천해줘.`;\n      this.askToAi();\n    }\n        }\n    }\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}