{"ast":null,"code":"import ResourceAllocation from '@/components/dashboard/ResourceAllocation.vue';\nexport default {\n  inject: ['$axios'],\n  components: {\n    ResourceAllocation\n  },\n  props: {},\n  data() {\n    return {\n      onLoading: true,\n      value1: \"\",\n      value2: \"\",\n      memberData: {},\n      majorList: {},\n      // 전공\n      generalList: {},\n      // 교양 \n      generalCoreList: {},\n      // 핵교\n      buttonVisible: true,\n      takeList: [],\n      promptResponse: \"\",\n      prompt: \"\",\n      takeString: \"\",\n      unTakeString: \"\",\n      unTakeList: [],\n      userInput: \"\"\n    };\n  },\n  mounted() {\n    this.fetchData();\n  },\n  methods: {\n    async fetchData() {\n      this.onLoading = true;\n      const userId = localStorage.getItem('memberId');\n      try {\n        const dashboardResponse = await this.$axios.get('/v1/dashboard', {\n          params: {\n            memberId: userId\n          }\n        });\n        const dashboardResult = dashboardResponse.data.result;\n        this.memberData = {\n          totalTakenCredit: dashboardResult.totalTakenCredit || 0,\n          majorTakenCredit: dashboardResult.majorTakenCredit || 0,\n          majorGrade: dashboardResult.majorGrade ? parseFloat(dashboardResult.majorGrade).toFixed(2) : 0.00,\n          previousMajorGrade: dashboardResult.previousMajorGrade ? parseFloat(dashboardResult.previousMajorGrade).toFixed(2) : 0.00,\n          totalGrade: dashboardResult.totalGrade ? parseFloat(dashboardResult.totalGrade).toFixed(2) : 0.00,\n          previousTotalGrade: dashboardResult.previousTotalGrade ? parseFloat(dashboardResult.previousTotalGrade).toFixed(2) : 0.00,\n          generalCoreTakenCredit: dashboardResult.generalCoreDTO.totalCredit || 0,\n          generalEssentialTakenCredit: dashboardResult.takenGeneralDTO.takenEssentialCredit || 0,\n          majorEssentialTakenCredit: dashboardResult.takenMajorDTO.takenEssentialCredit || 0,\n          one: dashboardResult.generalCoreDTO.takeOne,\n          two: dashboardResult.generalCoreDTO.takeTwo,\n          three: dashboardResult.generalCoreDTO.takeThree,\n          four: dashboardResult.generalCoreDTO.takeFour,\n          five: dashboardResult.generalCoreDTO.takeFive,\n          six: dashboardResult.generalCoreDTO.takeSix,\n          creative: dashboardResult.generalCoreDTO.takeCreative,\n          standardCredit: dashboardResult.generalCoreDTO.standardCredit,\n          totalGradeIncrese: this.calculatePercentageIncrease(dashboardResult.previousTotalGrade, dashboardResult.totalGrade),\n          MajorGradeIncrese: this.calculatePercentageIncrease(dashboardResult.previousMajorGrade, dashboardResult.majorGrade)\n        };\n        this.majorList = {\n          major: \"전공\",\n          DataList: dashboardResult.takenMajorDTO.untakenTop5CourseDTOList.map(course => ({\n            hak: course.courseCode,\n            name: course.courseName,\n            grade: course.credit\n          }))\n        };\n        this.generalList = {\n          major: \"교양\",\n          DataList: dashboardResult.takenGeneralDTO.untakenTop5CourseDTOList.map(course => ({\n            hak: course.courseCode,\n            name: course.courseName,\n            grade: course.credit\n          }))\n        };\n        this.generalCoreList = {\n          major: \"핵교\",\n          DataList: dashboardResult.generalCoreDTO.untakenTop5CourseDTOList.map(course => ({\n            hak: course.courseCode,\n            name: course.courseName,\n            grade: course.credit\n          }))\n        };\n        const takenCoursesResponse = await this.$axios.get('/v1/courses/take', {\n          params: {\n            memberId: userId\n          }\n        });\n        const takenCoursesResult = takenCoursesResponse.data.result.takenCourseDTOList;\n        if (Array.isArray(takenCoursesResult)) {\n          this.takeList = takenCoursesResult;\n        } else {\n          console.error('받은 데이터가 배열이 아닙니다:', takenCoursesResult);\n        }\n        const untakenCoursesResponse = await this.$axios.get('/v1/courses/untake', {\n          params: {\n            memberId: userId\n          }\n        });\n        const untakenCoursesResult = untakenCoursesResponse.data.result.untakenCourseDTOList;\n        this.unTakeList = untakenCoursesResult.map(item => ({\n          hak: item.courseCode,\n          courseId: item.courseId,\n          name: item.courseName,\n          code: item.categoryName,\n          grade: item.credit,\n          year: item.level,\n          people: item.takenNumber\n        }));\n      } catch (error) {\n        console.error('데이터 가져오기 실패:', error);\n        this.$swal(\"로그인을 해주세요.\", '', \"error\");\n      } finally {\n        this.onLoading = false;\n      }\n    },\n    generateTakeString() {\n      this.takeString = this.takeList.filter(subject => subject.categoryName === \"전공필수\" || subject.categoryName === \"전공선택\").map(subject => subject.courseName).join(', ');\n    },\n    generateUnTakeString() {\n      this.unTakeString = this.unTakeList.map(item => item.name).join(', ');\n    },\n    askToAi() {\n      const payload = {\n        prompt: this.prompt\n      };\n      this.$axios.post('/api', payload).then(response => {\n        this.promptResponse = response.data.output;\n        console.log('응답 받음:', this.promptResponse);\n        this.loading = false;\n      }).catch(error => {\n        console.error('오류 발생:', error);\n        this.loading = false;\n      });\n    },\n    handleClick() {\n      if (!this.userInput.trim()) {\n        this.$swal(\"희망 직종을 입력하세요.\", '', \"warning\");\n        return;\n      }\n      this.loading = true;\n      this.generateTakeString();\n      this.generateUnTakeString();\n      this.prompt = `내가 ${this.userInput}이/가 되고싶은데 현재 수강한 과목들은 {${this.takeString}}이고 미수강 과목들은 {${this.unTakeString}|인데 어떤 과목을 들으면 좋을까? 수강과목들을 제외한 미수강 과목들에서 과목명 그대로 5개만 추천해줘.`;\n      console.log(\"dong1\", this.prompt);\n      this.askToAi();\n      this.buttonVisible = false;\n    },\n    calculatePercentageIncrease(initialValue, finalValue) {\n      const increase = finalValue - initialValue;\n      const percentageIncrease = increase / initialValue * 100;\n      return percentageIncrease.toFixed(2);\n    }\n  }\n};","map":{"version":3,"names":["ResourceAllocation","inject","components","props","data","onLoading","value1","value2","memberData","majorList","generalList","generalCoreList","buttonVisible","takeList","promptResponse","prompt","takeString","unTakeString","unTakeList","userInput","mounted","fetchData","methods","userId","localStorage","getItem","dashboardResponse","$axios","get","params","memberId","dashboardResult","result","totalTakenCredit","majorTakenCredit","majorGrade","parseFloat","toFixed","previousMajorGrade","totalGrade","previousTotalGrade","generalCoreTakenCredit","generalCoreDTO","totalCredit","generalEssentialTakenCredit","takenGeneralDTO","takenEssentialCredit","majorEssentialTakenCredit","takenMajorDTO","one","takeOne","two","takeTwo","three","takeThree","four","takeFour","five","takeFive","six","takeSix","creative","takeCreative","standardCredit","totalGradeIncrese","calculatePercentageIncrease","MajorGradeIncrese","major","DataList","untakenTop5CourseDTOList","map","course","hak","courseCode","name","courseName","grade","credit","takenCoursesResponse","takenCoursesResult","takenCourseDTOList","Array","isArray","console","error","untakenCoursesResponse","untakenCoursesResult","untakenCourseDTOList","item","courseId","code","categoryName","year","level","people","takenNumber","$swal","generateTakeString","filter","subject","join","generateUnTakeString","askToAi","payload","post","then","response","output","log","loading","catch","handleClick","trim","initialValue","finalValue","increase","percentageIncrease"],"sources":["/Users/gimdongha/Desktop/cloudcomputing/i-curriculum_FE/src/views/mypage/DashBoard.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div v-if=\"onLoading\">\n      <div class=\"container container-slim py-4\">\n        <div class=\"text-center\">\n          <div class=\"text-muted mb-3\">마이 페이지</div>\n          <div class=\"progress progress-sm\">\n            <div class=\"progress-bar progress-bar-indeterminate\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div v-else>\n      <div class=\"page-header\">\n        <div class=\"row align-items-end\" style=\"height: 41px;\">\n          <div class=\"row pe-0\">\n            <div class=\"col-12\">\n              <div class=\"page-pretitle\">DashBoard</div>\n              <div class=\"btn-list justify-content-between align-items-center w-100\" style=\"height: 25px;\">\n                <h2 class=\"page-title\">마이페이지</h2>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"hr-text\"></div>\n      <!-- 대시보드 영역 시작-->\n      <div class=\"page-body mt-3\" id=\"pageBody\">\n        <div class=\"row row-cards\">\n          <!-- 전체 이수학점 -->\n          <div class=\"col-md-6 col-lg-3\">\n            <div class=\"card border\">\n              <div class=\"card-stamp\">\n                <div class=\"card-stamp-icon bg-blue\">\n                  <!-- ... -->\n                </div>\n              </div>\n              <div class=\"card-body\">\n                <h3 class=\"card-title \">전체 이수학점</h3>\n                <div class=\"h1 my-1 me-2\">{{ memberData.totalTakenCredit }} / 130\n                </div>\n              </div>\n            </div>\n          </div>\n          <!-- 전공 이수학점 -->\n          <div class=\"col-md-6 col-lg-3\">\n            <div class=\"card border\">\n              <div class=\"card-stamp\">\n                <div class=\"card-stamp-icon bg-gray\">\n                  <!-- ... -->\n                </div>\n              </div>\n              <div class=\"card-body\">\n                <h3 class=\"card-title \">전공 이수학점</h3>\n                <div class=\"h1 my-1 me-2\">\n                  {{ memberData.majorTakenCredit }} / 65\n                </div>\n              </div>\n            </div>\n          </div>\n          <!-- 전체 성적 -->\n          <div class=\"col-md-6 col-lg-3\">\n            <div class=\"card border\">\n              <div class=\"card-stamp\">\n                <div class=\"card-stamp-icon bg-green\">\n                  <!-- ... -->\n                </div>\n              </div>\n              <div class=\"card-body\">\n                <h3 class=\"card-title \">전체 학점</h3>\n                <div class=\"h1 my-1 me-2\">{{ memberData.totalGrade }} /<span>(4.5)</span>\n                </div>\n                <div class=\"me-auto\">\n                  <!-- ... -->\n                </div>\n              </div>\n            </div>\n          </div>\n          <!-- 전공 학점  -->\n          <div class=\"col-md-6 col-lg-3\">\n            <div class=\"card border\">\n              <div class=\"card-stamp\">\n                <div class=\"card-stamp-icon bg-pink\">\n                  <!-- ... -->\n                </div>\n              </div>\n              <div class=\"card-body\">\n                <h3 class=\"card-title \">전공 학점</h3>\n                <div class=\"h1 my-1 me-2\">{{ memberData.majorGrade }}/(4.5)</div>\n                <div class=\"me-auto\">\n                  <!-- ... -->\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!--  영역 끝-->\n      <ResourceAllocation :majorList=\"majorList\" \n        :generalList=\"generalList\" \n        :generalCoreList=\"generalCoreList\" \n        :majorSeries=\"majorSeries\" \n        :generalSeries=\"generalSeries\" \n        :generalCoreSeries=\"generalCoreSeries\" \n        :totalTakenCredit=\"memberData.totalTakenCredit\"\n        :majorTakenCredit=\"memberData.majorTakenCredit\"\n        :generalCoreTakenCredit=\"memberData.generalCoreTakenCredit\"\n        :majorEssentialTakenCredit=\"memberData.majorEssentialTakenCredit\"\n        :generalEssentialTakenCredit=\"memberData.generalEssentialTakenCredit\"\n        :one=\"memberData.one\"\n        :two=\"memberData.two\"\n        :three=\"memberData.three\"\n        :four=\"memberData.four\"\n        :five=\"memberData.five\"\n        :six=\"memberData.six\"\n        :creative=\"memberData.creative\"\n        :standardCredit=\"memberData.standardCredit\"\n      >\n      </ResourceAllocation>\n      <div>\n        <input v-model=\"userInput\" type=\"text\" placeholder=\"희망 직종을 입력하세요. ex) 백엔드 개발자\" class=\"form-control mb-3\" />\n        <button v-if=\"buttonVisible\" @click=\"handleClick\" class=\"btn btn-primary mb-3\">AI에게 과목 추천받기</button>\n        <div v-if=\"loading\">\n          <h1>Loading<span class=\"animated-dots\"></span></h1>\n        </div>\n        <div v-if=\"promptResponse && !loading\" class=\"col-12\">\n          <div class=\"card card-md\">\n            <div class=\"card-stamp card-stamp-lg\">\n              <div class=\"card-stamp-icon bg-primary\">\n                <!-- 아이콘 또는 이미지 추가 -->\n                <i class=\"fas fa-robot\"></i>\n              </div>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"row align-items-center\">\n                <div class=\"col-10\">\n                  <h3 class=\"page-title\">응답 결과</h3>\n                  <p></p>\n                  <div class=\"markdown\">\n                    <p ref=\"responseText\" v-html=\"promptResponse\"></p>\n                  </div>\n                  <div class=\"mt-3\">\n                    <!-- 추가 정보 -->\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport ResourceAllocation from '@/components/dashboard/ResourceAllocation.vue';\n\nexport default {\n  inject: ['$axios'],\n  components: {\n    ResourceAllocation,\n  },\n  props: {},\n  data() {\n    return {\n      onLoading: true,\n      value1: \"\",\n      value2: \"\",\n      memberData: {},\n      majorList:{},  // 전공\n      generalList:{}, // 교양 \n      generalCoreList:{}, // 핵교\n      buttonVisible: true,\n      takeList : [],\n      promptResponse:\"\",\n      prompt : \"\",\n      takeString : \"\",\n      unTakeString : \"\",\n      unTakeList : [],\n      userInput: \"\"\n    };\n  },\n  mounted() {\n    this.fetchData();\n  },\n  methods: {\n    async fetchData() {\n      this.onLoading = true;\n      const userId = localStorage.getItem('memberId');\n      \n      try {\n        const dashboardResponse = await this.$axios.get('/v1/dashboard', {\n          params: { memberId: userId }\n        });\n\n        const dashboardResult = dashboardResponse.data.result;\n        this.memberData = {\n          totalTakenCredit: dashboardResult.totalTakenCredit || 0,\n          majorTakenCredit: dashboardResult.majorTakenCredit || 0,\n          majorGrade: dashboardResult.majorGrade ? parseFloat(dashboardResult.majorGrade).toFixed(2) : 0.00,\n          previousMajorGrade: dashboardResult.previousMajorGrade ? parseFloat(dashboardResult.previousMajorGrade).toFixed(2) : 0.00,\n          totalGrade: dashboardResult.totalGrade ? parseFloat(dashboardResult.totalGrade).toFixed(2) : 0.00,\n          previousTotalGrade: dashboardResult.previousTotalGrade ? parseFloat(dashboardResult.previousTotalGrade).toFixed(2) : 0.00,\n          generalCoreTakenCredit: dashboardResult.generalCoreDTO.totalCredit || 0,\n          generalEssentialTakenCredit: dashboardResult.takenGeneralDTO.takenEssentialCredit || 0,\n          majorEssentialTakenCredit: dashboardResult.takenMajorDTO.takenEssentialCredit || 0,\n          one: dashboardResult.generalCoreDTO.takeOne,\n          two: dashboardResult.generalCoreDTO.takeTwo,\n          three: dashboardResult.generalCoreDTO.takeThree,\n          four: dashboardResult.generalCoreDTO.takeFour,\n          five: dashboardResult.generalCoreDTO.takeFive,\n          six: dashboardResult.generalCoreDTO.takeSix,\n          creative: dashboardResult.generalCoreDTO.takeCreative,\n          standardCredit: dashboardResult.generalCoreDTO.standardCredit,\n          totalGradeIncrese: this.calculatePercentageIncrease(dashboardResult.previousTotalGrade, dashboardResult.totalGrade),\n          MajorGradeIncrese: this.calculatePercentageIncrease(dashboardResult.previousMajorGrade, dashboardResult.majorGrade)\n        };\n\n        this.majorList = {\n          major: \"전공\",\n          DataList: dashboardResult.takenMajorDTO.untakenTop5CourseDTOList.map(course => ({\n            hak: course.courseCode,\n            name: course.courseName,\n            grade: course.credit\n          }))\n        };\n\n        this.generalList = {\n          major: \"교양\",\n          DataList: dashboardResult.takenGeneralDTO.untakenTop5CourseDTOList.map(course => ({\n            hak: course.courseCode,\n            name: course.courseName,\n            grade: course.credit\n          }))\n        };\n\n        this.generalCoreList = {\n          major: \"핵교\",\n          DataList: dashboardResult.generalCoreDTO.untakenTop5CourseDTOList.map(course => ({\n            hak: course.courseCode,\n            name: course.courseName,\n            grade: course.credit\n          }))\n        };\n\n        const takenCoursesResponse = await this.$axios.get('/v1/courses/take', {\n          params: { memberId: userId }\n        });\n        \n        const takenCoursesResult = takenCoursesResponse.data.result.takenCourseDTOList;\n        if (Array.isArray(takenCoursesResult)) {\n          this.takeList = takenCoursesResult;\n        } else {\n          console.error('받은 데이터가 배열이 아닙니다:', takenCoursesResult);\n        }\n\n        const untakenCoursesResponse = await this.$axios.get('/v1/courses/untake', {\n          params: { memberId: userId }\n        });\n\n        const untakenCoursesResult = untakenCoursesResponse.data.result.untakenCourseDTOList;\n        this.unTakeList = untakenCoursesResult.map(item => ({\n          hak: item.courseCode,\n          courseId: item.courseId,\n          name: item.courseName,\n          code: item.categoryName,\n          grade: item.credit,\n          year: item.level,\n          people: item.takenNumber\n        }));\n        \n      } catch (error) {\n        console.error('데이터 가져오기 실패:', error);\n        this.$swal(\"로그인을 해주세요.\", '', \"error\");\n      } finally {\n        this.onLoading = false;\n      }\n    },\n\n    generateTakeString() {\n      this.takeString = this.takeList\n        .filter(subject => subject.categoryName === \"전공필수\" || subject.categoryName === \"전공선택\")\n        .map(subject => subject.courseName)\n        .join(', ');\n    },\n\n    generateUnTakeString() {\n      this.unTakeString = this.unTakeList\n        .map(item => item.name)\n        .join(', ');\n    },\n\n    askToAi() {\n      const payload = {\n        prompt: this.prompt\n      };\n\n      this.$axios.post('/api', payload)\n        .then(response => {\n          this.promptResponse = response.data.output;\n          console.log('응답 받음:', this.promptResponse);\n          this.loading = false;\n        })\n        .catch(error => {\n          console.error('오류 발생:', error);\n          this.loading = false;\n        });\n    },\n\n    handleClick() {\n      if (!this.userInput.trim()) {\n        this.$swal(\"희망 직종을 입력하세요.\", '', \"warning\");\n        return;\n  }\n      this.loading = true;\n      this.generateTakeString();\n      this.generateUnTakeString();\n      this.prompt = `내가 ${this.userInput}이/가 되고싶은데 현재 수강한 과목들은 {${this.takeString}}이고 미수강 과목들은 {${this.unTakeString}|인데 어떤 과목을 들으면 좋을까? 수강과목들을 제외한 미수강 과목들에서 과목명 그대로 5개만 추천해줘.`;\n      console.log(\"dong1\", this.prompt);\n      this.askToAi();\n      this.buttonVisible = false;\n    },\n\n    calculatePercentageIncrease(initialValue, finalValue) {\n      const increase = finalValue - initialValue;\n      const percentageIncrease = (increase / initialValue) * 100;\n      return percentageIncrease.toFixed(2);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.page-link {\n  min-width: 0 !important;\n}\n\n.date-picker-cost {\n  justify-content: end;\n}\n\n.cost-card-header {\n  justify-content: end;\n}\n\n.cost-btn-group {\n  padding-right: 0.5rem !important;\n  justify-content: end;\n  box-shadow: none;\n}\n\n\n@media (max-width: 767px) {\n  .date-picker-cost {\n    margin-top: 0.5rem;\n    justify-content: start;\n    width: 100%;\n  }\n\n  .date-picker-cost .el-date-editor {\n    width: 100%;\n    display: flex;\n  }\n\n  .cost-card-header {\n    flex-wrap: wrap;\n    justify-content: start;\n  }\n\n  .date-picker-cost {\n    margin-top: 10px;\n  }\n\n  .cost-btn-group {\n    padding-right: 0 !important;\n    justify-content: start;\n    margin-top: 10px;\n    flex-wrap: wrap;\n  }\n\n}\n\n@media (max-width: 1199px) {\n  .cost-card-header {\n    flex-wrap: wrap;\n  }\n\n  .date-picker-cost {\n    margin-top: 10px;\n  }\n\n  .cost-btn-group {\n    padding-right: 0 !important;\n  }\n}\n\n.el-date-editor>.el-date-editor>.el-range-separator {\n  line-height: 16px !important;\n}\n\n.el-input__icon {\n  line-height: 16px !important;\n}\n.markdown p {\n  font-size: 1.1em;\n  white-space: pre-wrap; /* 줄바꿈을 위한 스타일 */\n  margin: 0; /* 텍스트 주변의 여백을 제거 */\n  justify-content: end;\n  text-align: left; /* 왼쪽 정렬 추가 */\n}\n\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}