{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport store from '../store/index';\nfunction guardMyroute(to, from, next) {\n  console.log(store, \"asddddddddddddddddddd\");\n  var isAuthenticated = false;\n  if (localStorage.getItem(\"isAuthenticated\")) isAuthenticated = true;else isAuthenticated = false;\n  if (isAuthenticated) {\n    next(); // allow to enter route\n  } else {\n    next(\"/signin\"); // go to '/signin';\n  }\n}\nconst userRoutes = [{\n  path: '/',\n  name: '\bSignIn',\n  component: () => import(\"../views/user/SignInPage.vue\")\n}, {\n  path: '/signin',\n  name: '\bSignInpage',\n  component: () => import(\"../views/user/SignInPage.vue\")\n}, {\n  path: '/createMember',\n  name: 'createMemberpage',\n  component: () => import(\"../views/user/createMember.vue\")\n}];\nconst defaultRoutes = [{\n  path: '/dashboard',\n  name: 'dashboard',\n  component: () => import('../views/mypage/DashBoard.vue'),\n  beforeEnter: guardMyroute\n}, {\n  path: '/myaccount',\n  name: 'my-account',\n  component: () => import('../views/myaccount/Myaccount.vue'),\n  beforeEnter: guardMyroute\n}, {\n  path: '/untake',\n  name: 'untake',\n  component: () => import('../views/coursemangent/UnTake.vue'),\n  beforeEnter: guardMyroute\n}, {\n  path: \"/Mytake\",\n  name: 'Mytake',\n  component: () => import('../views/coursemangent/MyTake.vue'),\n  beforeEnter: guardMyroute\n}, {\n  path: '/CurriculumDiagram',\n  name: 'CurriculumDiagramPage',\n  component: () => import('../views/mypage/CurriculumDiagram.vue'),\n  beforeEnter: guardMyroute\n}, {\n  path: '/CurriculumTable',\n  name: 'CurriculumTablePage',\n  component: () => import('../views/mypage/CurriculumTable.vue'),\n  beforeEnter: guardMyroute\n}];\nconst routes = [{\n  path: \"/\",\n  name: \"user\",\n  component: () => import(\"../layouts/UserLayout.vue\"),\n  children: userRoutes\n}, {\n  path: \"/default\",\n  name: \"default\",\n  component: () => import(\"../layouts/DefaultLayout.vue\"),\n  children: defaultRoutes\n}];\nconst router = createRouter({\n  history: createWebHistory('/'),\n  //나중에 변경해야함\n  routes\n});\n\n// import httpApi from '@/utils/http';\n\n// //token 재발급\n// async function refreshToken(){\n//   try{\n//       const token = await httpApi.post('/login',{\n//         username:this.$store.getters.memberId,\n//         password:this.$store.getters.password\n//       });\n//       // VueCookies.set('token', token.headers.data.token, '60*10' );\n//       return token;\n//   }catch(err){\n//       return err;\n//   }\n// }\n\n// // 모든 라우터들이 실행될때 토큰이 유효한지 확인하고 유효하지 않다면 토근을 재발급 또는 로그아웃 함수를 실행한다.\n// router.beforeEach( async(to, from, next) => {\n\n//   if(VueCookies.get('token')===null && VueCookies.get('refresh_token') !== null){\n//     await refreshToken();\n//   }\n\n//   if (to.matched.some(record => record.meta.unauthorized) || VueCookies.get('token')){\n//     return next();\n//   }\n\n//     alert('로그인 해주세요');\n//     return next('/login');\n// })\n\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","store","guardMyroute","to","from","next","console","log","isAuthenticated","localStorage","getItem","userRoutes","path","name","component","defaultRoutes","beforeEnter","routes","children","router","history"],"sources":["/Users/gimdongha/Desktop/cloudcomputing/i-curriculum_FE/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport store from '../store/index';\n\nfunction guardMyroute(to, from, next) {\n  console.log(store, \"asddddddddddddddddddd\");\n  var isAuthenticated = false;\n  if (localStorage.getItem(\"isAuthenticated\")) isAuthenticated = true;\n  else isAuthenticated = false;\n  if (isAuthenticated) {\n    next(); // allow to enter route\n  } else {\n    next(\"/signin\"); // go to '/signin';\n  }\n}\n\n\n\nconst userRoutes = [\n  {\n    path: '/',\n    name: '\bSignIn',\n    component: () => import(\"../views/user/SignInPage.vue\"),\n  },\n  {\n    path: '/signin',\n    name: '\bSignInpage',\n    component: () => import(\"../views/user/SignInPage.vue\"),\n  },\n  {\n    path: '/createMember',\n    name: 'createMemberpage',\n    component: () => import(\"../views/user/createMember.vue\"),\n  },\n  \n\n]\n\nconst defaultRoutes = [\n\n  \n  {\n    path: '/dashboard',\n    name: 'dashboard',\n    component: () => import('../views/mypage/DashBoard.vue'),\n    beforeEnter: guardMyroute\n  }\n  ,\n  {\n    path: '/myaccount',\n    name: 'my-account',\n    component: () => import('../views/myaccount/Myaccount.vue'),\n    beforeEnter: guardMyroute\n  },\n  {\n    path: '/untake',\n    name: 'untake',\n    component: () => import('../views/coursemangent/UnTake.vue'),\n    beforeEnter: guardMyroute\n  },\n  {\n    path: \"/Mytake\",\n    name: 'Mytake',\n    component: () => import('../views/coursemangent/MyTake.vue'),\n    beforeEnter: guardMyroute\n  },\n  {\n    path: '/CurriculumDiagram',\n    name: 'CurriculumDiagramPage',\n    component: () => import('../views/mypage/CurriculumDiagram.vue'),\n    beforeEnter: guardMyroute\n  }\n  ,\n  {\n    path: '/CurriculumTable',\n    name: 'CurriculumTablePage',\n    component: () => import('../views/mypage/CurriculumTable.vue'),\n    beforeEnter: guardMyroute\n  }\n  ,\n]\n\n\n\n\n\nconst routes = [\n  {\n    path: \"/\",\n    name: \"user\",\n    component: () => import(\"../layouts/UserLayout.vue\"),\n    children: userRoutes,\n  },\n  {\n    path: \"/default\",\n    name: \"default\",\n    component: () => import(\"../layouts/DefaultLayout.vue\"),\n    children: defaultRoutes,\n  },\n\n\n\n\n];\n\n\n\nconst router = createRouter({\n  history: createWebHistory('/'), //나중에 변경해야함\n  routes,\n\n})\n\n\n\n// import httpApi from '@/utils/http';\n\n\n\n// //token 재발급\n// async function refreshToken(){\n//   try{\n//       const token = await httpApi.post('/login',{\n//         username:this.$store.getters.memberId,\n//         password:this.$store.getters.password\n//       });\n//       // VueCookies.set('token', token.headers.data.token, '60*10' );\n//       return token;\n//   }catch(err){\n//       return err;\n//   }\n// }\n\n// // 모든 라우터들이 실행될때 토큰이 유효한지 확인하고 유효하지 않다면 토근을 재발급 또는 로그아웃 함수를 실행한다.\n// router.beforeEach( async(to, from, next) => {\n\n//   if(VueCookies.get('token')===null && VueCookies.get('refresh_token') !== null){\n//     await refreshToken();\n//   }\n\n//   if (to.matched.some(record => record.meta.unauthorized) || VueCookies.get('token')){\n//     return next();\n//   }\n\n//     alert('로그인 해주세요');\n//     return next('/login');\n// })\n\n\n\n\n\nexport default router \n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}