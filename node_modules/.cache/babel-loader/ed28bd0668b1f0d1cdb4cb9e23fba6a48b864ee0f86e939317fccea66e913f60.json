{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport router from '../../router/index';\nconst refreshInstance = axios.create({\n  timeout: 30000\n});\n// 타임아웃 30초\naxios.defaults.timeout = 30000;\naxios.interceptors.request.use(config => {\n  // 토큰을 가져와서 Authorization 헤더에 추가\n  const token = localStorage.getItem('authorization');\n  if (token) {\n    config.headers.Authorization = `${token}`;\n  }\n  console.log(\"요청 전 \", config.url);\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\naxios.interceptors.response.use(response => {\n  console.log(\"응답이완료 \", response.config.url);\n  return response;\n}, error => {\n  // 프로그램 방식으로 컴포넌트 호출\n  if (error.response.status === 401) {\n    alert(error.response.status);\n    return Promise.reject(error);\n  }\n  if (error.response.status === 400) {\n    // 로그인 access 토큰이 만료 되었을때\n    try {\n      refreshInstance.post('/reissue', {\n        params: {},\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      }).then(res => {\n        localStorage.setItem('authorization', res.headers.authorization);\n        error.config.headers.Authorization = `${res.headers.authorization}`;\n        window.location.reload();\n        return axios(error.config); // 원래 요청 재시도\n      });\n    } catch (error1) {\n      console.log(error1);\n      return Promise.reject(error1);\n    }\n  }\n  if (error.response.status === 406) {\n    // refresh token 만료\n    try {\n      alert(\"시간이 만료 되었습니다. 다시 로그인 해주세요\");\n      refreshInstance.post('/logout', {\n        params: {},\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      }).then(() => {\n        localStorage.removeItem(\"authorization\");\n        localStorage.removeItem(\"isAuthenticated\");\n        localStorage.removeItem(\"memberId\");\n        router.push('/');\n      });\n    } catch {\n      return Promise.reject(error);\n    }\n  }\n  // return Promise.reject(error);\n});\nconst defaultHeader = {\n  'Content-Type': 'application/json',\n  'Accept': 'application/json'\n};\n\n// 토근을 받아와서 헤더를 생성할때의 기본 헤더\n// const tokenHeader = (token) => {\n//     return headers = {\n//         'Content-Type': 'application/json',\n//         'Authorization': `vRealizeOpsToken ${token}`,\n//         'Accept': 'application/json'\n//     };\n// }\nconst httpApi = {\n  get: function (url, opt) {\n    const apiOpt = {\n      url: url,\n      params: opt?.params ?? {},\n      headers: opt?.headers ?? defaultHeader\n    };\n    return new Promise((resolve, reject) => {\n      axios.get(url, {\n        params: apiOpt.params,\n        headers: apiOpt.headers\n      }).then(response => {\n        resolve(response);\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  },\n  post: function (url, body, opt) {\n    const apiOpt = {\n      url: url,\n      params: opt?.params ?? {},\n      headers: opt?.headers ?? defaultHeader,\n      body: body ?? {}\n    };\n    return new Promise((resolve, reject) => {\n      axios.post(url, apiOpt.body, {\n        params: apiOpt.params,\n        headers: apiOpt.headers\n      }).then(response => {\n        resolve(response);\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  },\n  delete: function (url, opt) {\n    const apiOpt = {\n      url: url,\n      params: opt?.params ?? {},\n      headers: opt?.headers ?? defaultHeader\n    };\n    return new Promise((resolve, reject) => {\n      axios.delete(url, {\n        params: apiOpt.params,\n        headers: apiOpt.headers\n      }).then(response => {\n        resolve(response);\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  },\n  put: function (url, body, opt) {\n    const apiOpt = {\n      url: url,\n      params: opt?.params ?? {},\n      headers: opt?.headers ?? defaultHeader,\n      body: body ?? {}\n    };\n    return new Promise((resolve, reject) => {\n      axios.put(url, apiOpt.body, {\n        params: apiOpt.params,\n        headers: apiOpt.headers\n      }).then(response => {\n        resolve(response);\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  },\n  patch: function (url, body, opt) {\n    const apiOpt = {\n      url: url,\n      params: opt?.params ?? {},\n      headers: opt?.headers ?? defaultHeader,\n      body: body ?? {}\n    };\n    return new Promise((resolve, reject) => {\n      axios.patch(url, apiOpt.body, {\n        params: apiOpt.params,\n        headers: apiOpt.headers\n      }).then(response => {\n        resolve(response);\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n};\nexport default httpApi;","map":{"version":3,"names":["axios","router","refreshInstance","create","timeout","defaults","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","console","log","url","error","Promise","reject","response","status","alert","post","params","then","res","setItem","authorization","window","location","reload","error1","removeItem","push","defaultHeader","httpApi","get","opt","apiOpt","resolve","catch","body","delete","put","patch"],"sources":["/Users/gimdongha/Desktop/cloudcomputing/i-curriculum_FE/src/utils/http/index.js"],"sourcesContent":["import axios from 'axios';\nimport router from '../../router/index';\n\n\nconst refreshInstance = axios.create({\n    timeout: 30000\n});\n// 타임아웃 30초\naxios.defaults.timeout = 30000;\naxios.interceptors.request.use(config => {\n    // 토큰을 가져와서 Authorization 헤더에 추가\n    const token = localStorage.getItem('authorization');\n    if (token) {\n        config.headers.Authorization = `${token}`;\n    }\n    console.log(\"요청 전 \", config.url);\n    return config;\n}, error => {\n    return Promise.reject(error);\n});\n\naxios.interceptors.response.use(response => {\n    console.log(\"응답이완료 \", response.config.url);\n    return response;\n}, (error) => {\n    // 프로그램 방식으로 컴포넌트 호출\n    if (error.response.status === 401) {\n        alert(error.response.status)\n        return Promise.reject(error);\n    }\n    if (error.response.status === 400) {\n        // 로그인 access 토큰이 만료 되었을때\n        try {\n            refreshInstance.post('/reissue', {\n                params: {},\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                }\n            }).then((res) => {\n                localStorage.setItem('authorization', res.headers.authorization);\n                error.config.headers.Authorization = `${res.headers.authorization}`;\n                window.location.reload()\n                return axios(error.config); // 원래 요청 재시도\n            })\n\n        } catch (error1) {\n            console.log(error1);\n            return Promise.reject(error1);\n        }\n\n    }\n    if (error.response.status === 406) {\n        // refresh token 만료\n        try {\n            alert(\"시간이 만료 되었습니다. 다시 로그인 해주세요\");\n            refreshInstance.post('/logout', {\n                params: {},\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                }\n            }).then(() => {\n                localStorage.removeItem(\"authorization\");\n                localStorage.removeItem(\"isAuthenticated\");\n                localStorage.removeItem(\"memberId\");\n                router.push('/')\n            })\n        } catch {\n            return Promise.reject(error);\n        }\n\n    }\n    // return Promise.reject(error);\n});\n\n\nconst defaultHeader = {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n}\n\n\n// 토근을 받아와서 헤더를 생성할때의 기본 헤더\n// const tokenHeader = (token) => {\n//     return headers = {\n//         'Content-Type': 'application/json',\n//         'Authorization': `vRealizeOpsToken ${token}`,\n//         'Accept': 'application/json'\n//     };\n// }\nconst httpApi = {\n    get: function (url, opt) {\n        const apiOpt = {\n            url: url,\n            params: opt?.params ?? {},\n            headers: opt?.headers ?? defaultHeader\n        }\n        return new Promise((resolve, reject) => {\n            axios.get(url, {\n                params: apiOpt.params,\n                headers: apiOpt.headers\n            }).then((response) => {\n                resolve(response);\n            }).catch((error) => {\n                reject(error);\n            })\n        })\n    },\n    post: function (url, body, opt) {\n        const apiOpt = {\n            url: url,\n            params: opt?.params ?? {},\n            headers: opt?.headers ?? defaultHeader,\n            body: body ?? {}\n        }\n        return new Promise((resolve, reject) => {\n            axios.post(url, apiOpt.body, {\n                params: apiOpt.params,\n                headers: apiOpt.headers\n            }).then((response) => {\n                resolve(response);\n            }).catch((error) => {\n                reject(error);\n            })\n        })\n    },\n    delete: function (url, opt) {\n        const apiOpt = {\n            url: url,\n            params: opt?.params ?? {},\n            headers: opt?.headers ?? defaultHeader\n        }\n        return new Promise((resolve, reject) => {\n            axios.delete(url, {\n                params: apiOpt.params,\n                headers: apiOpt.headers\n            }).then((response) => {\n                resolve(response);\n            }).catch((error) => {\n                reject(error);\n            })\n        })\n    },\n    put: function (url, body, opt) {\n        const apiOpt = {\n            url: url,\n            params: opt?.params ?? {},\n            headers: opt?.headers ?? defaultHeader,\n            body: body ?? {}\n        }\n        return new Promise((resolve, reject) => {\n            axios.put(url, apiOpt.body, {\n                params: apiOpt.params,\n                headers: apiOpt.headers\n            }).then((response) => {\n                resolve(response);\n            }).catch((error) => {\n                reject(error);\n            })\n        })\n    },\n    patch: function (url, body, opt) {\n        const apiOpt = {\n            url: url,\n            params: opt?.params ?? {},\n            headers: opt?.headers ?? defaultHeader,\n            body: body ?? {}\n        }\n        return new Promise((resolve, reject) => {\n            axios.patch(url, apiOpt.body, {\n                params: apiOpt.params,\n                headers: apiOpt.headers\n            }).then((response) => {\n                resolve(response);\n            }).catch((error) => {\n                reject(error);\n            })\n        })\n    }\n}\n\nexport default httpApi;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}