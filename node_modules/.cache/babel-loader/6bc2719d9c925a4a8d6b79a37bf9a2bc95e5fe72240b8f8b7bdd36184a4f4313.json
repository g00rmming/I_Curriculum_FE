{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, vModelDynamic as _vModelDynamic, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from '@/assets/image.png';\nconst _hoisted_1 = {\n  class: \"page page-center\"\n};\nconst _hoisted_2 = {\n  class: \"container-tight py-4\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"text-center mt-4 mb-4\"\n}, [/*#__PURE__*/_createElementVNode(\"h2\", null, [/*#__PURE__*/_createCommentVNode(\" 화이트 로고 \"), /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  width: \"200px\"\n}), /*#__PURE__*/_createCommentVNode(\" 블루 로고 \")])], -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"card card-md\"\n};\nconst _hoisted_5 = {\n  class: \"card-body\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"h3 text-center mb-4\"\n}, \"로그인 후 사용하세요\", -1 /* HOISTED */);\nconst _hoisted_7 = {\n  action: \"./\",\n  method: \"get\",\n  autocomplete: \"off\",\n  novalidate: \"\"\n};\nconst _hoisted_8 = {\n  class: \"mb-3\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"form-label\"\n}, \"아이디(ID)\", -1 /* HOISTED */);\nconst _hoisted_10 = {\n  class: \"mb-2\"\n};\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"form-label\"\n}, [/*#__PURE__*/_createTextVNode(\" 비밀번호(Password) \"), /*#__PURE__*/_createCommentVNode(\" <span class=\\\"form-label-description text-primary\\\">\\n                    <router-link to=\\\"/forgotpassword\\\" tabindex=\\\"-1\\\" style=\\\"color: rgba(var(--tblr-link-color-rgb),var(--tblr-link-opacity,1))\\\"> 비밀번호 찾기</router-link>\\n                  </span> \")], -1 /* HOISTED */);\nconst _hoisted_12 = {\n  class: \"input-group input-group-flat\"\n};\nconst _hoisted_13 = [\"type\"];\nconst _hoisted_14 = {\n  class: \"input-group-text\"\n};\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  class: \"icon\",\n  width: \"24\",\n  height: \"24\",\n  viewBox: \"0 0 24 24\",\n  \"stroke-width\": \"2\",\n  stroke: \"currentColor\",\n  fill: \"none\",\n  \"stroke-linecap\": \"round\",\n  \"stroke-linejoin\": \"round\"\n}, [/*#__PURE__*/_createElementVNode(\"path\", {\n  stroke: \"none\",\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n}), /*#__PURE__*/_createElementVNode(\"path\", {\n  d: \"M12 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0\"\n}), /*#__PURE__*/_createElementVNode(\"path\", {\n  d: \"M22 12c-2.667 4.667 -6 7 -10 7s-7.333 -2.333 -10 -7c2.667 -4.667 6 -7 10 -7s7.333 2.333 10 7\"\n})], -1 /* HOISTED */);\nconst _hoisted_16 = {\n  class: \"form-footer mb-2 text-center\"\n};\nconst _hoisted_17 = {\n  class: \"text-center text-muted mt-3\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _createElementVNode(\"form\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    class: \"form-control\",\n    placeholder: \"your Id\",\n    autocomplete: \"off\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.loginInfo.email = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.loginInfo.email]])]), _createElementVNode(\"div\", _hoisted_10, [_hoisted_11, _createElementVNode(\"div\", _hoisted_12, [_withDirectives(_createElementVNode(\"input\", {\n    type: $data.passwordFieldType,\n    class: \"form-control\",\n    placeholder: \"Your password\",\n    autocomplete: \"off\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.loginInfo.password = $event)\n  }, null, 8 /* PROPS */, _hoisted_13), [[_vModelDynamic, $data.loginInfo.password]]), _createElementVNode(\"span\", _hoisted_14, [_createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.showPassword && $options.showPassword(...args)),\n    class: \"link-secondary\",\n    title: \"Show password\",\n    \"data-bs-toggle\": \"tooltip\"\n  }, [_createCommentVNode(\" Download SVG icon from http://tabler-icons.io/i/eye \"), _hoisted_15])])])]), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"a\", {\n    onClick: _cache[3] || (_cache[3] = $event => $options.userValidation()),\n    class: \"btn btn-pill btn-primary\",\n    role: \"button\"\n  }, \"로그인\")])])])]), _createCommentVNode(\"todo : 회원가입 로직을 완성하면 추가해야한다.\"), _createElementVNode(\"div\", _hoisted_17, [_createVNode(_component_router_link, {\n    to: \"/createMember\",\n    tabindex: \"-1\",\n    class: \"\",\n    style: {\n      \"color\": \"rgba(var(--tblr-link-color-rgb),var(--tblr-link-opacity,1))\"\n    }\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"회원가입\")]),\n    _: 1 /* STABLE */\n  })])])]);\n}","map":{"version":3,"names":["_imports_0","class","_createElementVNode","_createCommentVNode","src","width","action","method","autocomplete","novalidate","_createTextVNode","xmlns","height","viewBox","stroke","fill","d","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","type","placeholder","_cache","$event","$data","loginInfo","email","_hoisted_10","_hoisted_11","_hoisted_12","passwordFieldType","password","_hoisted_13","_hoisted_14","href","onClick","args","$options","showPassword","title","_hoisted_15","_hoisted_16","userValidation","role","_hoisted_17","_createVNode","_component_router_link","to","tabindex","style","default","_withCtx","_"],"sources":["/Users/gimdongha/Desktop/cloudcomputing/i-curriculum_FE/src/components/user/SignInComp.vue"],"sourcesContent":["<template>\n  <div class=\"page page-center\">\n    <div class=\"container-tight py-4\">\n      <div class=\"text-center mt-4 mb-4\">\n        <h2>\n          <!-- 화이트 로고 -->\n          <img src=\"@/assets/image.png\" width=\"200px\" />\n          <!-- 블루 로고 -->\n        </h2>\n      </div>\n      <div class=\"card card-md\">\n        <div class=\"card-body\">\n          <h2 class=\"h3 text-center mb-4\">로그인 후 사용하세요</h2>\n          <form action=\"./\" method=\"get\" autocomplete=\"off\" novalidate>\n            <div class=\"mb-3\">\n              <label class=\"form-label\">아이디(ID)</label>\n              <input type=\"email\" class=\"form-control\" placeholder=\"your Id\" autocomplete=\"off\"\n                v-model=\"loginInfo.email\" />\n            </div>\n            <div class=\"mb-2\">\n              <label class=\"form-label\">\n                비밀번호(Password)\n                <!-- <span class=\"form-label-description text-primary\">\n                    <router-link to=\"/forgotpassword\" tabindex=\"-1\" style=\"color: rgba(var(--tblr-link-color-rgb),var(--tblr-link-opacity,1))\"> 비밀번호 찾기</router-link>\n                  </span> -->\n              </label>\n              <div class=\"input-group input-group-flat\">\n                <input :type=\"passwordFieldType\" class=\"form-control\" placeholder=\"Your password\" autocomplete=\"off\"\n                  v-model=\"loginInfo.password\" />\n                <span class=\"input-group-text\">\n                  <a href=\"#\" @click=\"showPassword\" class=\"link-secondary\" title=\"Show password\"\n                    data-bs-toggle=\"tooltip\"><!-- Download SVG icon from http://tabler-icons.io/i/eye -->\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\n                      stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                      <path d=\"M12 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0\" />\n                      <path\n                        d=\"M22 12c-2.667 4.667 -6 7 -10 7s-7.333 -2.333 -10 -7c2.667 -4.667 6 -7 10 -7s7.333 2.333 10 7\" />\n                    </svg>\n                  </a>\n                </span>\n              </div>\n            </div>\n            <div class=\"form-footer mb-2 text-center\">\n              <a @click=\"userValidation()\" class=\"btn  btn-pill btn-primary\" role=\"button\">로그인</a>\n            </div>\n          </form>\n        </div>\n\n      </div>\n      <!--todo : 회원가입 로직을 완성하면 추가해야한다.-->\n      <div class=\"text-center text-muted mt-3\">\n        <router-link to=\"/createMember\" tabindex=\"-1\" class=\"\"\n          style=\"color: rgba(var(--tblr-link-color-rgb),var(--tblr-link-opacity,1))\">회원가입</router-link>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\n\nexport default {\n  inject: ['$axios'],\n  data() {\n    return {\n      loginInfo: {\n        email: '',\n        password: ''\n      },\n      passwordFieldType: 'password'\n    };\n  },\n  mounted: function () {\n          localStorage.removeItem(\"authorization\");\n          localStorage.removeItem(\"isAuthenticated\");\n          localStorage.removeItem(\"memberId\");\n          localStorage.removeItem(\"nickname\");\n          localStorage.removeItem(\"department_name\");\n  },\n  methods: {\n    showPassword() {\n      console.log(\"누르기전 = \", this.passwordFieldType);\n      this.passwordFieldType = this.passwordFieldType === 'password' ? 'text' : 'password';\n      console.log(\"누른후 = \", this.passwordFieldType);\n    },\n    userValidation() {\n      // 로그인 검증 로직 추가\n      if (this.loginInfo.email && this.loginInfo.password) {\n        // 예제에서는 간단히 조건을 체크하여 로그인 처리를 합니다.\n        // 실제로는 백엔드와 통신하여 인증을 수행해야 합니다.\n        //formdata생성\n        const frm = new FormData()\n        frm.append('username', this.loginInfo.email)\n        frm.append('password', this.loginInfo.password)\n        \n        this.$axios.post('/login', frm, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }\n        ).then((res) => {\n          // // 토큰을 LocalStorage에 저장\n          // localStorage.setItem(\"authorization\", res.headers.authorization);\n          // localStorage.setItem(\"isAuthenticated\", true);\n          // localStorage.setItem(\"memberId\", res.data.memberId);\n          this.$store.dispatch('login', { token: res.headers.authorization, memberId: res.data.memberId, password: this.loginInfo.password });\n          // this.$store.commit('setUser', { username: res.data.memberId });\n\n          console.log(localStorage, \"#########################################localstroage 검사입니다#########################################3\")\n          console.log(this.$store, \"#########################################store 검사입니다!!#########################################\");\n\n\n          // this.$cookies.set('test', this.headers.);\n          // const cookie = this.$cookies.get('test');\n          // console.log(cookie,'seok'); //testValue\n\n          // 멤버 정보를 가져오기\n          this.$axios.get(`'/v1/members'/my-info/${res.data.memberId}`, {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Authorization': `${res.headers.authorization}`,\n          }).then((res1) => {\n              console.log(res1, \"test\")\n              localStorage.setItem(\"nickname\", res1.data.result.nickname);\n              localStorage.setItem(\"department_name\", res1.data.result.department_name);\n          this.$router.push({ name: 'dashboard' });\n        })\n        })\n          .catch(() => {\n            this.$swal('아이디 및 비밀번호를 확인하세요.', '', 'warning');\n          })\n      } else {\n        this.$swal('아이디 및 비밀번호를 입력하세요.', '', 'warning');\n      }\n    }\n  },\n  unmounted: function () {\n  }\n};\n</script>\n\n<style>\n/* 스타일은 필요에 따라 작성하세요 */\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}