{"ast":null,"code":"export default {\n  name: \"password-reset\",\n  components: {},\n  props: {\n    btnLabel: String\n  },\n  data() {\n    return {\n      selectedEmploy: {},\n      newPw: \"\",\n      newPwConfirm: \"\",\n      curPw: \"\",\n      userEmail: \"\",\n      urlApi: \"\"\n    };\n  },\n  mounted() {},\n  methods: {\n    async showAlert() {\n      this.userEmail = this.$store.getters.userEmail;\n      const userId = this.$store.getters.userId;\n      // var checkPw = await this.checkPassword();\n      var checkPw = true; //임시로 \n      if (!checkPw) {\n        this.$swal(\"현재 비밀번호를 확인해주세요.\", '', 'warning');\n        this.curPw = \"\";\n      } else if (this.newPw !== this.newPwConfirm || this.newPw === \"\") {\n        this.curPw = \"\";\n        this.newPw = \"\";\n        this.newPwConfirm = \"\";\n        this.$swal(\"비밀번호를 확인해주세요\", '', 'warning');\n      } else {\n        this.$axios.post(`${this.urlApi}`, {}, {\n          params: {\n            userId: userId,\n            password: this.newPw\n          }\n        }).then(() => {\n          this.$swal(\"비밀번호가 변경되었습니다.\", '', 'success');\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    },\n    checkPassword() {\n      return new Promise((resolve, reject) => {\n        this.$axios.get() // 여기서 userpassword 확인\n        .then(res => {\n          if (res.data[0].userPassword === this.curPw) {\n            resolve(true);\n          } else {\n            resolve(false);\n          }\n        }).catch(err => {\n          console.error(err);\n          reject(err);\n        });\n      });\n    }\n  },\n  watch: {}\n};","map":{"version":3,"names":["name","components","props","btnLabel","String","data","selectedEmploy","newPw","newPwConfirm","curPw","userEmail","urlApi","mounted","methods","showAlert","$store","getters","userId","checkPw","$swal","$axios","post","params","password","then","catch","err","console","log","checkPassword","Promise","resolve","reject","get","res","userPassword","error","watch"],"sources":["/Users/gimdongha/Desktop/cloudcomputing/i-curriculum_FE/src/components/user/pwResetAccount.vue"],"sourcesContent":["<template>\n    <div>\n        <button type=\"button\" class=\"w-100 btn \" data-bs-toggle=\"modal\" data-bs-target=\"#pwreset_modal\">\n            {{ btnLabel }}\n        </button>\n\n        <div class=\"modal\" id=\"pwreset_modal\" tabindex=\"-1\">\n            <div class=\"modal-dialog modal-m modal-dialog-centered\" role=\"document\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title\">비밀번호 변경</h5>\n                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                    </div>\n                    <div class=\"modal-body\">\n                        <div class=\"mb-3\">\n                            <label class=\"form-label\">현재 비밀번호</label>\n                            <input v-model=\"curPw\" type=\"text\" class=\"form-control\" name=\"example-text-input\"\n                                placeholder=\"비밀번호를 입력해주세요\">\n                        </div>\n                        <div class=\"mb-3\">\n                            <label class=\"form-label\">새로운 비밀번호</label>\n                            <input v-model=\"newPw\" type=\"text\" class=\"form-control\" name=\"example-text-input\"\n                                placeholder=\"비밀번호를 입력해주세요\">\n                        </div>\n                        <div class=\"mb-3\">\n                            <label class=\"form-label\">새로운 비밀번호 확인</label>\n                            <input v-model=\"newPwConfirm\" type=\"text\" class=\"form-control\" name=\"example-text-input\"\n                                placeholder=\"비밀번호를 입력해주세요\">\n                        </div>\n                    </div>\n                    <!-- <div class=\"card-body p-5\">\n                        <div class=\"mb-2\">\n                            <div for=\"\">현재 비밀번호</div>\n                            <div class=\"input-group input-group-flat mb-2\">\n                                <input type=\"password\" class=\"form-control ps-1\" autocomplete=\"off\">\n                            </div>\n                            <div for=\"\">새로운 비밀번호</div>\n                            <div class=\"input-group input-group-flat mb-2\">\n                                <input type=\"password\" class=\"form-control ps-1\" autocomplete=\"off\">\n                            </div>\n                            <div for=\"\">새로운 비밀번호 확인</div>\n                            <div class=\"input-group input-group-flat\">\n                                <input type=\"password\" class=\"form-control ps-1\" autocomplete=\"off\">\n                            </div>\n                        </div>\n\n                    </div> -->\n                    <div class=\"modal-footer\">\n                        <a class=\"btn\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\n                            취소\n                        </a>\n                        <a @click=\"showAlert\" class=\"btn btn-primary ms-auto\" data-bs-dismiss=\"modal\">\n                            확인\n                        </a>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n  \n<script>\nexport default {\n    name: \"password-reset\",\n    components: {\n\n    },\n\n    props: {\n        btnLabel: String,\n    },\n    data() {\n        return {\n            selectedEmploy: {},\n            newPw: \"\",\n            newPwConfirm: \"\",\n            curPw: \"\",\n            userEmail: \"\",\n            urlApi: \"\"\n        };\n    },\n    mounted() { },\n    methods: {\n        async showAlert() {\n            \n            this.userEmail = this.$store.getters.userEmail;\n            const userId = this.$store.getters.userId;\n            // var checkPw = await this.checkPassword();\n            var checkPw=true; //임시로 \n            if (!checkPw) {\n                this.$swal(\"현재 비밀번호를 확인해주세요.\", '', 'warning')\n                this.curPw = \"\";\n            } else if ((this.newPw !== this.newPwConfirm) || this.newPw === \"\") {\n                this.curPw = \"\";\n                this.newPw = \"\";\n                this.newPwConfirm = \"\";\n                this.$swal(\"비밀번호를 확인해주세요\", '', 'warning')\n            } else { \n                this.$axios.post(`${this.urlApi}`,{},{\n                        params: {\n                            userId: userId,\n                            password: this.newPw\n                        }\n                    }).then(()=>{\n                    this.$swal(\"비밀번호가 변경되었습니다.\", '', 'success')\n                }).catch((err)=>{\n                    console.log(err)\n                })\n            }\n        },\n        checkPassword() {\n            return new Promise((resolve, reject) => {\n                this.$axios.get() // 여기서 userpassword 확인\n                    .then((res) => {\n                        if (res.data[0].userPassword === this.curPw) {\n                            resolve(true);\n                        } else {\n                            resolve(false);\n                        }\n                    })\n                    .catch((err) => {\n                        console.error(err);\n                        reject(err);\n                    })\n            })\n\n        },\n    },\n    watch: {},\n};\n</script>\n  "],"mappings":"AA+DA,eAAe;EACXA,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE,CAEZ,CAAC;EAEDC,KAAK,EAAE;IACHC,QAAQ,EAAEC;EACd,CAAC;EACDC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,cAAc,EAAE,CAAC,CAAC;MAClBC,KAAK,EAAE,EAAE;MACTC,YAAY,EAAE,EAAE;MAChBC,KAAK,EAAE,EAAE;MACTC,SAAS,EAAE,EAAE;MACbC,MAAM,EAAE;IACZ,CAAC;EACL,CAAC;EACDC,OAAOA,CAAA,EAAG,CAAE,CAAC;EACbC,OAAO,EAAE;IACL,MAAMC,SAASA,CAAA,EAAG;MAEd,IAAI,CAACJ,SAAQ,GAAI,IAAI,CAACK,MAAM,CAACC,OAAO,CAACN,SAAS;MAC9C,MAAMO,MAAK,GAAI,IAAI,CAACF,MAAM,CAACC,OAAO,CAACC,MAAM;MACzC;MACA,IAAIC,OAAO,GAAC,IAAI,EAAE;MAClB,IAAI,CAACA,OAAO,EAAE;QACV,IAAI,CAACC,KAAK,CAAC,kBAAkB,EAAE,EAAE,EAAE,SAAS;QAC5C,IAAI,CAACV,KAAI,GAAI,EAAE;MACnB,OAAO,IAAK,IAAI,CAACF,KAAI,KAAM,IAAI,CAACC,YAAY,IAAK,IAAI,CAACD,KAAI,KAAM,EAAE,EAAE;QAChE,IAAI,CAACE,KAAI,GAAI,EAAE;QACf,IAAI,CAACF,KAAI,GAAI,EAAE;QACf,IAAI,CAACC,YAAW,GAAI,EAAE;QACtB,IAAI,CAACW,KAAK,CAAC,cAAc,EAAE,EAAE,EAAE,SAAS;MAC5C,OAAO;QACH,IAAI,CAACC,MAAM,CAACC,IAAI,CAAC,GAAG,IAAI,CAACV,MAAM,EAAE,EAAC,CAAC,CAAC,EAAC;UAC7BW,MAAM,EAAE;YACJL,MAAM,EAAEA,MAAM;YACdM,QAAQ,EAAE,IAAI,CAAChB;UACnB;QACJ,CAAC,CAAC,CAACiB,IAAI,CAAC,MAAI;UACZ,IAAI,CAACL,KAAK,CAAC,gBAAgB,EAAE,EAAE,EAAE,SAAS;QAC9C,CAAC,CAAC,CAACM,KAAK,CAAEC,GAAG,IAAG;UACZC,OAAO,CAACC,GAAG,CAACF,GAAG;QACnB,CAAC;MACL;IACJ,CAAC;IACDG,aAAaA,CAAA,EAAG;MACZ,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACpC,IAAI,CAACZ,MAAM,CAACa,GAAG,CAAC,EAAE;QAAA,CACbT,IAAI,CAAEU,GAAG,IAAK;UACX,IAAIA,GAAG,CAAC7B,IAAI,CAAC,CAAC,CAAC,CAAC8B,YAAW,KAAM,IAAI,CAAC1B,KAAK,EAAE;YACzCsB,OAAO,CAAC,IAAI,CAAC;UACjB,OAAO;YACHA,OAAO,CAAC,KAAK,CAAC;UAClB;QACJ,CAAC,EACAN,KAAK,CAAEC,GAAG,IAAK;UACZC,OAAO,CAACS,KAAK,CAACV,GAAG,CAAC;UAClBM,MAAM,CAACN,GAAG,CAAC;QACf,CAAC;MACT,CAAC;IAEL;EACJ,CAAC;EACDW,KAAK,EAAE,CAAC;AACZ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}